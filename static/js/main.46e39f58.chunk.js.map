{"version":3,"sources":["store/actions/actionTypes.js","api.js","store/actions/auth.js","layout/Menu.js","layout/Layout.js","components/LeagueTable.js","components/GameWeek.js","layout/Home.js","user/Login.js","user/Signup.js","user/Profile.js","item/ItemList.js","item/ItemDetail.js","components/ImageUpload.js","item/ItemCreate.js","item/ItemUpdate.js","user/ProfileEdit.js","season/SeasonList.js","manager/ManagerList.js","components/CareerTable.js","duel/Duel.js","duel/DuelInfo.js","manager/ManagerDetail.js","stats/StatsTable.js","stats/StatsList.js","duel/DuelCompare.js","season/Season19.js","routes.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","baseURL","api","items","users","signin","signup","profile","mediaItems","mediaUsers","managers","matches","gameweeks","tableteams","tables","leagues","duels","league19teams","league19","authStart","type","actionTypes","authSuccess","token","username","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","useBreakpoint","Grid","withRouter","connect","actions","props","screens","useState","current","setCurrent","collapsed","setCollapsed","searchValue","setSearchValue","handleMenuClick","e","key","className","style","marginLeft","src","height","alt","xs","onClick","float","marginTop","marginRight","MenuOutlined","theme","darkMode","mode","hidden","defaultSelectedKeys","Item","icon","HomeOutlined","to","CalendarOutlined","TeamOutlined","AreaChartOutlined","ProjectOutlined","BookOutlined","placeholder","allowClear","prefix","SearchOutlined","width","margin","onChange","target","value","onPressEnter","name","console","log","Header","Layout","Content","Footer","CustomLayout","isReturningUser","savedMode","JSON","parse","getItem","userPrefersDark","window","matchMedia","getPrefColorScheme","getInitialMode","setDarkMode","useEffect","setItem","stringify","children","title","shape","size","BulbFilled","BulbOutlined","prevMode","FacebookFilled","TwitterOutlined","InstagramOutlined","YoutubeFilled","GithubFilled","columns","dataIndex","sorter","compare","a","b","rank","render","item","color","href","id","wins","responsive","draws","losses","score","points","LeagueTable","league","setLeague","undefined","axios","method","url","then","res","data","catch","err","message","dataSource","table","teams","sort","pagination","filters","extra","backgroundColor","padding","display","justifyContent","alignItems","GameWeek","gameweek","setGameweek","l","length","defaultValue","marginBottom","find","x","map","gm","Option","header","footer","bordered","renderItem","match","gutter","span","home_score","away_score","home_team","Text","away_team","Home","loadingIcon","LoadingOutlined","fontSize","spin","state","loading","onAuth","password","post","expirationDate","Date","getTime","info","includes","Form","useForm","form","history","goBack","indicator","sm","md","lg","border","Title","level","textAlign","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","rules","required","UserOutlined","Password","LockOutlined","htmlType","email","password1","password2","confirm","MailOutlined","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","user","setUser","headers","response","paddingLeft","PhoneOutlined","status","subTitle","IconText","text","React","createElement","setItems","location","search","itemLayout","pageSize","StarOutlined","LikeOutlined","MessageOutlined","image","fallback","Meta","description","params","itemID","created_at","updated_at","ImageUpload","setLoading","imageUrl","setImageUrl","uploadButton","PlusOutlined","multiple","listType","showUploadList","beforeUpload","file","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","onImageSelected","TextArea","Input","formItemLayout","labelCol","wrapperCol","tailFormItemLayout","offset","setImage","statusText","resetFields","label","rows","path","fields","setFields","formData","FormData","append","danger","push","birth_date","phone_number","avatar","resetuser","SeasonList","setLeagues","leagueID","setLeagueID","setLevel","allseason","filter","year","number","Group","Button","ManagerList","setManagers","sortType","setSortType","getChampion","manager","career","forEach","total_champion","getRunnerup","total_runnerup","getPoints","total_point","getWins","total_win","getDraws","total_draw","getLosses","total_loss","getScore","total_score","getScoreAway","total_score_away","orderByChamp","sortManagers","orderByPoints","orderByScore","orderByScoreAway","orderByWin","orderByDraw","orderByLoss","grid","xl","xxl","hoverable","count","TrophyFilled","TrophyOutlined","CareerTable","setData","Duel","setMatches","getMatches","opponent","DuelInfo","setDuels","element","duel","team1","team2","win","draw","loss","win1","win2","toString","getDuel","getOpponents","ManagerDetail","setManager","getThird","total_third","getTopScorer","total_topscorer","getTeamScoreAway","week","total_vanga","getVanga","MinusOutlined","total_appearance","toFixed","getAverageScore","getAverageScoreAway","getAveragePoints","getAverageMatchScore","getAverageMatchScoreAway","getAverageMatchPoints","FlagOutlined","SmileOutlined","MehOutlined","FrownOutlined","getAverageTopScorer","getAverageWins","getAverageDraws","getAverageLosses","getMatchTopScorerRate","getMatchWinRate","getMatchDrawRate","getMatchLossRate","team","score_away","getTeams","StatsTable","showHeader","StatsList","getAppearance","sorted","i","orderByRunnerup","orderByThird","ToTopOutlined","orderByAppearance","orderByTopScorer","EyeOutlined","orderByVanga","orderByWins","orderByDraws","orderByLosses","DuelCompare","setTeam1","setTeam2","league1","league2","league3","league4","Season19","season19","setSeason19","BaseRouter","exact","component","ItemList","ItemDetail","ItemCreate","ItemUpdate","Login","Signup","Profile","ProfileEdit","App","this","onTryAutoSignup","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.46e39f58.chunk.js","sourcesContent":["export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","// const baseURL = 'http://127.0.0.1:8000/';\r\nconst baseURL = 'https://tractordraftback.herokuapp.com/';\r\n\r\nconst api = {    \r\n    items: baseURL + 'api/items',\r\n    users: baseURL + 'api/users',\r\n    signin: baseURL + 'rest-auth/login/',\r\n    signup: baseURL + 'rest-auth/registration/',\r\n    profile: baseURL + 'rest-auth/user/',\r\n    mediaItems: baseURL + 'media/items',\r\n    mediaUsers: baseURL + 'media/users',\r\n    managers: baseURL + 'api/fantasy/managers',\r\n    matches: baseURL + 'api/fantasy/matches',\r\n    gameweeks: baseURL + 'api/fantasy/gameweeks',\r\n    tableteams: baseURL + 'api/fantasy/tableteams',\r\n    tables: baseURL + 'api/fantasy/tables',\r\n    leagues: baseURL + 'api/fantasy/leagues',    \r\n    duels: baseURL + 'api/fantasy/duels',    \r\n    league19teams: baseURL + 'api/fantasy/league19teams',    \r\n    league19: baseURL + 'api/fantasy/league19',    \r\n}\r\n\r\nexport default api;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nimport api from '../../api';\r\nimport { message } from 'antd';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n}\r\n\r\nexport const authSuccess = (token, username) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        username: username\r\n    };\r\n}\r\n\r\nexport const authFail = error => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('expirationDate');    \r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n}\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n    return dispatch => {\r\n        setTimeout(() => {            \r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    };\r\n}\r\n\r\nexport const authLogin = (username, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post(api.signin, {\r\n            username: username,\r\n            password: password\r\n        })\r\n        .then(res => {\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token, username));\r\n            dispatch(checkAuthTimeout(3600));\r\n            message.info(`Welcome, ${username}`);\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err));\r\n            if (err.message.includes(\"400\")) {\r\n                message.error(\"Username or password is incorrect!\")\r\n            } else if (err.message.includes(\"500\")) {\r\n                message.error(\"Sorry, server error has occured. Please, try again later.\")\r\n            } else {\r\n                message.error(\"Error has occured. Try again.\")\r\n                console.log(err)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup = (username, email, password1, password2) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post(api.signup, {\r\n            username: username,\r\n            email: email,\r\n            password1: password1,\r\n            password2: password2\r\n        })\r\n        .then(res => {\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\r\n            localStorage.setItem('token', token);            \r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(token, username));\r\n            dispatch(checkAuthTimeout(3600));\r\n            message.info(`Welcome, ${username}`);\r\n        })\r\n        .catch(err => {\r\n            dispatch(authFail(err))\r\n            if (err.message.includes(\"400\")) {\r\n                message.error(\"Username or password is incorrect!\")\r\n            } else if (err.message.includes(\"500\")) {\r\n                message.error(\"Sorry, server error has occured. Please, try again later.\")\r\n            } else {\r\n                message.error(\"Error has occured. Try again.\")\r\n                console.log(err)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {        \r\n        const token = localStorage.getItem('token');\r\n        const username = localStorage.getItem('username');\r\n        if (token === undefined) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token, username));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Button, Grid, Menu, Input } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { AreaChartOutlined, BookOutlined, CalendarOutlined, HomeOutlined, MenuOutlined, SearchOutlined, TeamOutlined, ProjectOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nfunction CustomMenu (props) {\r\n    const screens = useBreakpoint();\r\n    const [current, setCurrent] = useState('home');\r\n    const [collapsed, setCollapsed] = useState(true);  \r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const handleMenuClick = (e) => {        \r\n        if (e.key === 'search') {\r\n            return;\r\n        }        \r\n        setCurrent(e.key);\r\n        setCollapsed(true);\r\n        setSearchValue('');\r\n    };\r\n\r\n    const handleMenuCollapsed = () => {\r\n        setCollapsed(!collapsed);\r\n    }\r\n\r\n    const onSearchChange = e => {\r\n        setSearchValue(e.target.value);\r\n    }\r\n\r\n    const onSearch = e => {        \r\n        var name = e.target.value;\r\n        console.log(name)\r\n        // props.history.push(`/items?search=${name}`)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"logo\" style={{ marginLeft: '5%' }}>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Premier_League_Logo.svg/1920px-Premier_League_Logo.svg.png\" style={{ height: '100%' }} alt=\"logo\" />                  \r\n            </div>\r\n            { screens.xs ? (\r\n                <div>\r\n                    <Button type=\"primary\" onClick={handleMenuCollapsed} style={{ float: 'right', marginTop: '5%', marginRight: '5%' }}>\r\n                        <MenuOutlined />\r\n                    </Button>\r\n                    <Menu \r\n                        className=\"menu\" \r\n                        theme={props.darkMode ? \"dark\" : \"light\"} \r\n                        mode=\"inline\" hidden={collapsed} \r\n                        onClick={handleMenuClick}\r\n                        defaultSelectedKeys={[current]}\r\n                    >\r\n                        <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"seasons\" icon={<CalendarOutlined />}>\r\n                            <Link to=\"/seasons\">Seasons</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"managers\" icon={<TeamOutlined />}>\r\n                            <Link to=\"/managers\">Managers</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"stats\" icon={<AreaChartOutlined />}>\r\n                            <Link to=\"/stats\">Statistic</Link>\r\n                        </Menu.Item>             \r\n                        <Menu.Item key=\"compare\" icon={<ProjectOutlined />}>\r\n                            <Link to=\"/compare\">Харьцуулалт</Link>\r\n                        </Menu.Item>  \r\n                        <Menu.Item key=\"season19\" icon={<BookOutlined />}>\r\n                            <Link to=\"/season19\">19-20 улирал</Link>\r\n                        </Menu.Item>            \r\n                    </Menu>\r\n                </div>\r\n            ) : (\r\n                <Menu \r\n                    className=\"menu\" \r\n                    theme={props.darkMode ? \"dark\" : \"light\"} \r\n                    mode=\"horizontal\" \r\n                    onClick={handleMenuClick} \r\n                    defaultSelectedKeys={[current]} \r\n                    style={{ marginRight: '5%' }}\r\n                >\r\n                    <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Нүүр</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"seasons\" icon={<CalendarOutlined />}>\r\n                        <Link to=\"/seasons\">Улирал</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"managers\" icon={<TeamOutlined />}>\r\n                        <Link to=\"/managers\">Менежер</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"stats\" icon={<AreaChartOutlined />}>\r\n                        <Link to=\"/stats\">Статистик</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"compare\" icon={<ProjectOutlined />}>\r\n                        <Link to=\"/compare\">Харьцуулалт</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"season19\" icon={<BookOutlined />}>\r\n                        <Link to=\"/season19\">19-20 улирал</Link>\r\n                    </Menu.Item>                    \r\n                    <Input \r\n                        placeholder=\"Хайх...\"\r\n                        allowClear\r\n                        prefix={<SearchOutlined />}\r\n                        style={{ width: 200, float: 'right', margin: '16px' }}\r\n                        onChange={onSearchChange}\r\n                        onPressEnter={onSearch}\r\n                        value={searchValue}                                                                       \r\n                    />               \r\n                </Menu>\r\n            )}                \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())        \r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(CustomMenu));","import React, { useEffect, useState } from 'react';\r\nimport { Button, Layout, Tooltip } from 'antd';\r\nimport CustomMenu from './Menu';\r\nimport './Layout.css';\r\nimport { BulbFilled, BulbOutlined, FacebookFilled, GithubFilled, InstagramOutlined, TwitterOutlined, YoutubeFilled } from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction CustomLayout (props) {    \r\n\r\n    const [darkMode, setDarkMode] = useState(getInitialMode());\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('dark', JSON.stringify(darkMode))\r\n    }, [darkMode])\r\n\r\n    function getInitialMode() {\r\n        const isReturningUser = \"dark\" in localStorage;\r\n        const savedMode = JSON.parse(localStorage.getItem('dark'));\r\n        const userPrefersDark = getPrefColorScheme();\r\n        if (isReturningUser) {\r\n            return savedMode;\r\n        } else if (userPrefersDark) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }        \r\n    }\r\n\r\n    function getPrefColorScheme() {\r\n        if (!window.matchMedia) return;\r\n\r\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    }\r\n\r\n    return(\r\n        <Layout className={darkMode ? \"layout-dark\" : \"layout-light\"}>\r\n            <Header className=\"header\">\r\n                <CustomMenu {...props} darkMode={darkMode} />                \r\n            </Header>\r\n            <Content className=\"content\">                                     \r\n                <div className=\"content-item\">\r\n                    {props.children}                    \r\n                </div>                \r\n                <div className=\"theme-switch-container\">\r\n                    {/* <Switch                         \r\n                        className=\"theme-switch\"\r\n                        checkedChildren={<span><BulbFilled /> Light</span>}\r\n                        unCheckedChildren={<span><BulbOutlined /> Dark</span>}\r\n                        defaultChecked={!darkMode}\r\n                        onChange={() => setDarkMode(prevMode => !prevMode)}                    \r\n                    />          */}\r\n                    <Tooltip title={darkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}>\r\n                        <Button \r\n                            type={darkMode ? \"primary\" : \"default\"}\r\n                            shape=\"circle\" \r\n                            size=\"large\" \r\n                            icon={darkMode ? <BulbFilled /> : <BulbOutlined />} \r\n                            onClick={() => setDarkMode(prevMode => !prevMode)}\r\n                        />\r\n                    </Tooltip>\r\n                </div>\r\n            </Content>\r\n            <Footer className=\"footer\">\r\n                <div>\r\n                    <Tooltip title=\"Facebook\">\r\n                        <Button shape=\"circle\" icon={<FacebookFilled />} style={{ margin: '8px' }} size=\"large\" /> \r\n                    </Tooltip>\r\n                    <Tooltip title=\"Twitter\">\r\n                        <Button shape=\"circle\" icon={<TwitterOutlined />} style={{ margin: '8px' }} size=\"large\" /> \r\n                    </Tooltip>\r\n                    <Tooltip title=\"Instagram\">\r\n                        <Button shape=\"circle\" icon={<InstagramOutlined />} style={{ margin: '8px' }} size=\"large\" /> \r\n                    </Tooltip>\r\n                    <Tooltip title=\"Youtube\">\r\n                        <Button shape=\"circle\" icon={<YoutubeFilled />} style={{ margin: '8px' }} size=\"large\" /> \r\n                    </Tooltip>\r\n                    <Tooltip title=\"Youtube\">\r\n                        <Button shape=\"circle\" icon={<GithubFilled />} style={{ margin: '8px' }} size=\"large\" /> \r\n                    </Tooltip>\r\n                    <p>\r\n                        © 2021 Mollywood. All Rights Reserved. Designed and developed by On Plus.\r\n                    </p>\r\n                </div>                \r\n            </Footer>\r\n        </Layout>\r\n    );  \r\n};\r\n\r\nexport default CustomLayout;","import { Spin, Table, Tag } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Байр',\r\n        dataIndex: 'rank',\r\n        key: 'rank',\r\n        sorter: {\r\n            compare: (a, b) => a.rank - b.rank,\r\n        },\r\n        render: item => <Tag color={item < 4 ? 'green' : item < 8 ? 'geekblue' : 'volcano'}>{item}</Tag>        \r\n    },\r\n    {\r\n        title: 'Менежер',\r\n        dataIndex: 'manager',\r\n        key: 'manager',\r\n        render: item => <a href={`/managers/${item.id}`}>{item.name}</a>\r\n    },\r\n    {\r\n        title: 'Хожил',\r\n        dataIndex: 'wins',\r\n        key: 'wins',\r\n        sorter: {\r\n            compare: (a, b) => b.wins - a.wins,\r\n        },\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Тэнцээ',\r\n        dataIndex: 'draws',\r\n        key: 'draws',\r\n        sorter: {\r\n            compare: (a, b) => b.draws - a.draws,\r\n        },\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Хожигдол',\r\n        dataIndex: 'losses',\r\n        key: 'losses',\r\n        sorter: {\r\n            compare: (a, b) => b.losses - a.losses,\r\n        },\r\n        responsive: ['md'],\r\n    },    \r\n    {\r\n        title: '+',\r\n        dataIndex: 'score',\r\n        key: 'score',\r\n        sorter: {\r\n            compare: (a, b) => b.score - a.score,            \r\n        },\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Оноо',\r\n        dataIndex: 'points',\r\n        key: 'points',\r\n        sorter: {\r\n            compare: (a, b) => b.points - a.points,\r\n        },        \r\n    },\r\n];\r\n\r\nconst LeagueTable = (props) => {\r\n    \r\n    const [league, setLeague] = useState();       \r\n    \r\n    useEffect(() => {    \r\n        // GET TABLE\r\n        setLeague(undefined)\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}/${props.id}/`\r\n        }).then(res => { \r\n            setLeague(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                       \r\n    }, [props.id])\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { league ? (\r\n                <div>\r\n                    <Table \r\n                        columns={columns} \r\n                        dataSource={league.table.teams.sort((a, b) => a.rank - b.rank)} \r\n                        onChange={onChange} \r\n                        pagination={false} \r\n                    />\r\n                    <div style={{ backgroundColor: '#fff', padding: '16px' }}>\r\n                        <strong>Тайлбар:</strong>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\r\n                            <div>\r\n                                <Tag color='green'>1-3</Tag> - Шагналт байр        \r\n                            </div>\r\n                            <div>\r\n                                <Tag color='geekblue'>4-7</Tag> - Аюулгүй бүс        \r\n                            </div>\r\n                            <div>\r\n                                <Tag color='volcano'>8-10</Tag> - Унах бүс         \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}      \r\n        </>  \r\n    );\r\n};\r\n\r\nexport default LeagueTable;","import { Col, Row, Select, Spin, List, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nconst GameWeek = (props) => {\r\n    \r\n    const [league, setLeague] = useState();    \r\n    const [gameweek, setGameweek] = useState();\r\n\r\n    useEffect(() => {\r\n        setLeague(undefined)\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}/${props.id}/`\r\n        }).then(res => {           \r\n            let l = res.data     \r\n            setLeague(l)             \r\n            setGameweek(l.gameweeks[l.gameweeks.length - 1])            \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });\r\n    }, [props.id])\r\n\r\n    function handleChange(value) {\r\n        console.log(value)   \r\n        setGameweek(league.gameweeks.find(x => x.id === value))     \r\n    }\r\n\r\n    return (\r\n        <>\r\n            { league ? (\r\n                <div>            \r\n                    <strong>Тойрог сонгох: </strong>\r\n                    <Select defaultValue={league.gameweeks[league.gameweeks.length - 1].id} style={{ marginBottom: '16px' }} onChange={handleChange}>\r\n                        {league.gameweeks.map(gm => {\r\n                            return (\r\n                                <Select.Option value={gm.id}>{gm.name}</Select.Option>\r\n                            )\r\n                        })}\r\n                    </Select>     \r\n                    { gameweek ? (\r\n                        <List \r\n                            header={<strong>Үр дүн:</strong>}\r\n                            footer={\r\n                                <div>\r\n                                    <strong>Тайлбар:</strong>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\r\n                                        <div>\r\n                                            <Avatar style={{ color: '#fff', backgroundColor: '#87d068' }}>W</Avatar> - Хожил \r\n                                        </div>\r\n                                        <div>\r\n                                            <Avatar>D</Avatar> - Тэнцээ \r\n                                        </div>\r\n                                        <div>\r\n                                            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>L</Avatar> - Хожигдол \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            bordered\r\n                            style={{ backgroundColor: '#fff' }}\r\n                            dataSource={gameweek.matches}\r\n                            renderItem={match => (\r\n                                <List.Item>\r\n                                    <Row gutter={[16, 16]} style={{ width: '100%', height: '100%', margin: '0' }}>\r\n                                        <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>                                            \r\n                                            <div>\r\n                                                { match.home_score > match.away_score ?\r\n                                                    <Avatar style={{ color: '#fff', backgroundColor: '#87d068' }}>W</Avatar>                                                \r\n                                                : match.home_score < match.away_score ?\r\n                                                    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>L</Avatar>\r\n                                                :\r\n                                                    <Avatar>D</Avatar>\r\n                                                }                                                \r\n                                            </div>\r\n                                            <div>\r\n                                                <a href={`/managers/${match.home_team.id}`}>{match.home_team.name}</a>\r\n                                            </div>                                            \r\n                                        </Col>\r\n                                        <Col span={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>                                        \r\n                                            <Typography.Text>{match.home_score} - {match.away_score}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>                                                                                                                                    \r\n                                            <div>\r\n                                                <a href={`/managers/${match.away_team.id}`}>{match.away_team.name}</a>\r\n                                            </div>\r\n                                            <div>\r\n                                                { match.home_score < match.away_score ?\r\n                                                    <Avatar style={{ color: '#fff', backgroundColor: '#87d068' }}>W</Avatar>                                                \r\n                                                : match.home_score > match.away_score ?\r\n                                                    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>L</Avatar>\r\n                                                :\r\n                                                    <Avatar>D</Avatar>\r\n                                                }                                                \r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </List.Item>\r\n                            )}\r\n                        /> \r\n                    ) : (\r\n                        <></>\r\n                    )}                             \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}      \r\n        </>  \r\n    );\r\n};\r\n\r\nexport default GameWeek;","import React from 'react';\r\nimport LeagueTable from '../components/LeagueTable';\r\nimport GameWeek from '../components/GameWeek';\r\n\r\nfunction Home (props) {    \r\n    return (\r\n        <div>            \r\n            <LeagueTable id={2} />\r\n            <GameWeek id={2} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Typography, Spin, Row, Col } from 'antd';\r\nimport { LoadingOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst loadingIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst Login = (props) => {\r\n    const [form] = Form.useForm();    \r\n\r\n    useEffect(() => {\r\n        if (props.token) {\r\n            props.history.goBack();\r\n        }  \r\n    }, [props.token, props.history])\r\n    \r\n    const onFinish = (values) => {                \r\n        props.onAuth(values.username, values.password);       \r\n        // props.history.goBack();\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <div>            \r\n            {props.loading ? (\r\n                <Spin indicator={loadingIcon} />\r\n            ) : (\r\n                <Row>            \r\n                    <Col xs={0} sm={4} md={6} lg={8}></Col>\r\n                    <Col xs={24} sm={16} md={12} lg={8} style={{ border: '1px solid #a1a1a1', padding: '16px' }}>\r\n                        <Typography.Title level={3} style={{ textAlign: 'center' }}>\r\n                            Login                    \r\n                        </Typography.Title>                        \r\n                        <Form                            \r\n                            form={form}                            \r\n                            name=\"normal_login\"\r\n                            className=\"login-form\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            <Form.Item                                \r\n                                name=\"username\"\r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your username!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"Username\" />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item                                \r\n                                name=\"password\"\r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input.Password prefix={<LockOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100%' }}>\r\n                                    Login\r\n                                </Button>\r\n                                <p> or \r\n                                    <NavLink to=\"/signup/\"> register here</NavLink>\r\n                                </p>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>  \r\n                    <Col xs={0} sm={4} md={6} lg={8}></Col>                  \r\n                </Row>\r\n            )}  \r\n        </div>      \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,        \r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Typography, Spin, Row, Col } from 'antd';\r\nimport { LoadingOutlined, LockOutlined, MailOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../store/actions/auth';\r\n\r\nconst loadingIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst Signup = (props) => {\r\n    const [form] = Form.useForm();    \r\n\r\n    useEffect(() => {\r\n        if (props.token) {\r\n            props.history.goBack();\r\n        }  \r\n    }, [props.token, props.history])\r\n    \r\n    const onFinish = (values) => {        \r\n        props.onAuth(values.username, values.email, values.password, values.confirm);        \r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <div>            \r\n            {props.loading ? (\r\n                <Spin indicator={loadingIcon} />\r\n            ) : (\r\n                <Row>            \r\n                    <Col xs={0} sm={4} md={6} lg={8}></Col> \r\n                    <Col xs={24} sm={16} md={12} lg={8} style={{ border: '1px solid #a1a1a1', padding: '16px' }}>\r\n                        <Typography.Title level={3} style={{ textAlign: 'center' }}>\r\n                            Sign up                    \r\n                        </Typography.Title>                        \r\n                        <Form                            \r\n                            form={form}\r\n                            name=\"basic\"\r\n                            initialValues={{\r\n                                remember: true,\r\n                            }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            <Form.Item\r\n                                name=\"email\"                                \r\n                                rules={[\r\n                                {\r\n                                    type: 'email',\r\n                                    message: 'The input is not valid E-mail!',\r\n                                },\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your E-mail!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<MailOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"E-mail\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"username\"                                                          \r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your username!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input prefix={<UserOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"Username\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"password\"                                \r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                                ]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input.Password prefix={<LockOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"Password\" />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"confirm\"                                \r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(rule, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject('The two passwords that you entered do not match!');\r\n                                    },\r\n                                }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password prefix={<LockOutlined style={{ color: '#a1a1a1' }} />} placeholder=\"Confirm Password\" />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: '100%' }}>\r\n                                    Sign up\r\n                                </Button>\r\n                                <p> or \r\n                                    <NavLink to=\"/login/\"> login here</NavLink>\r\n                                </p>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col xs={0} sm={4} md={6} lg={8}></Col> \r\n                </Row>\r\n            )}  \r\n        </div>      \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,        \r\n        token: state.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import { Button, Col, Result, Row, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { CalendarOutlined, MailOutlined, PhoneOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nfunction Profile (props) {\r\n\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {        \r\n        axios({\r\n            method: 'GET',\r\n            url: api.profile,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Token ${props.token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            setUser(response.data)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [props.token])\r\n\r\n    return (\r\n        <div>\r\n            {user ? (\r\n                <Row gutter={[16, 16]} style={{ width: 400 }}>\r\n                    <Col span={8}>\r\n                        <Avatar size={96} icon={<UserOutlined />} />\r\n                    </Col>\r\n                    <Col span={16} style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Typography.Title level={3}>{user.username}</Typography.Title>\r\n                        <a href=\"/\">[Edit]</a>\r\n                        {/* <p>E-mail: {user.email}</p> */}\r\n                    </Col>                    \r\n                    <Col span={24} style={{ paddingLeft: '16px' }}>\r\n                        <p ><MailOutlined /> {user.email}</p>                        \r\n                        <p><PhoneOutlined /> 99113355</p>\r\n                        <p><CalendarOutlined /> 2000-05-20</p>\r\n                    </Col>\r\n                </Row>\r\n            ) : (\r\n                <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"Sorry, you are not authenticated. Please log in first.\"\r\n                    extra={<Button type=\"primary\" href=\"/login\">Go to login page</Button>}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React, { useEffect, useState } from 'react';\r\nimport { Image, List, Space } from 'antd';\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../api';\r\n\r\nconst IconText = ({ icon, text }) => (\r\n    <Space>\r\n        {React.createElement(icon)}\r\n        {text}\r\n    </Space>\r\n);\r\n\r\nfunction ItemList(props) {\r\n\r\n    const [items, setItems] = useState();\r\n\r\n    useEffect(() => {        \r\n        var url = api.items + props.location.search;\r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            setItems(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message);\r\n        })\r\n    }, [props.location.search]);\r\n\r\n    return(\r\n        <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            pagination={{\r\n                pageSize: 3,\r\n            }}\r\n            dataSource={items}\r\n            footer={\r\n            <div>\r\n                <a href=\"/newitem\" hidden={props.token === null}>Add new item</a>\r\n            </div>\r\n            }\r\n            renderItem={item => (\r\n                <List.Item\r\n                    style={{  border: '1px solid white' }}\r\n                    key={item.title}\r\n                    actions={[\r\n                        <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n                        <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\r\n                        <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\r\n                    ]}\r\n                    extra={\r\n                        <Link to={`items/${item.id}`}>\r\n                            <Image\r\n                                width={200}\r\n                                alt=\"logo\"\r\n                                src={item.image}\r\n                                fallback=\"https://thumbs.dreamstime.com/z/no-image-available-icon-photo-camera-flat-vector-illustration-132483296.jpg\"\r\n                            />\r\n                        </Link>\r\n                    }\r\n                >\r\n                    <List.Item.Meta                    \r\n                        title={                        \r\n                            <a href={`/items/${item.id}`}>{item.name}</a>                                                \r\n                        }\r\n                        description={<a href={`/updateitem/${item.id}/`} hidden={props.token === null}>[Edit]</a>}   \r\n                    />\r\n                    {item.description}\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemList);","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Image, Spin } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport api from '../api';\r\n\r\nfunction ItemDetail(props) {\r\n\r\n    const [item, setItem] = useState();\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.itemID;\r\n        const url = api.items + \"/\" + id + \"/\";        \r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        })\r\n        .then(res => {\r\n            console.log(res.data);\r\n            setItem(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message);\r\n        })\r\n    }, [props.match]);\r\n\r\n    return(\r\n        <div>\r\n            {item ? (\r\n                <>                    \r\n                    <Image                    \r\n                        width={200}\r\n                        alt=\"logo\"\r\n                        src={item.image}\r\n                        fallback=\"https://thumbs.dreamstime.com/z/no-image-available-icon-photo-camera-flat-vector-illustration-132483296.jpg\"\r\n                    />                    \r\n                    <h1>Name: {item.name}</h1>\r\n                    <p>Description: {item.description}</p>\r\n                    <p>Created at: {item.created_at}</p>\r\n                    <p>Last updated: {item.updated_at}</p>\r\n                    <a href={`/updateitem/${item.id}`} hidden={props.token === null}>Edit</a>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Spin />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemDetail);","import React, { useEffect, useState } from 'react';\r\nimport { Upload, message } from 'antd';\r\nimport './ImageUpload.css';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst ImageUpload = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState();\r\n\r\n    useEffect(() => {        \r\n        console.log(props.image)\r\n        setImageUrl(props.image)\r\n    }, [props.image]);\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n      }\r\n\r\n    function handleChange(info) {        \r\n        setLoading(true);        \r\n        if (info.file.type === 'image/jpeg' || info.file.type === 'image/png') {            \r\n            getBase64(info.file, imageUrl => \r\n                setImageUrl(imageUrl),\r\n                props.onImageSelected(info.file)\r\n            );\r\n            // setImage(info.file);\r\n            // props.onImageSelected(info.file);\r\n        }\r\n        else {            \r\n            message.error('You can only upload JPG/PNG file!');     \r\n        }              \r\n        setLoading(false);           \r\n    }\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Upload\r\n            name=\"image\"\r\n            multiple={false}\r\n            listType=\"picture-card\"\r\n            className=\"image-uploader\"\r\n            showUploadList={false}            \r\n            beforeUpload={() => false}\r\n            onChange={handleChange}\r\n        >\r\n            {imageUrl ? <img src={imageUrl} alt=\"upload\" style={{ width: '100%' }} /> : uploadButton}\r\n        </Upload>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Typography, message, Result } from 'antd';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport api from '../api';\r\nimport ImageUpload from \"../components/ImageUpload\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 12,\r\n            offset: 6,\r\n        },\r\n    },\r\n};\r\n\r\nfunction ItemCreate (props) {    \r\n    const [form] = Form.useForm()    \r\n    const [image, setImage] = useState();    \r\n\r\n    const onFinish = values => {        \r\n        const data = {\r\n            \"name\": values.name,\r\n            \"description\": values.description,\r\n            \"image\": image,\r\n            \"token\": props.token\r\n        }\r\n        axios({\r\n            method: 'POST',\r\n            url: `${api.items}/`,\r\n            data: data\r\n        })            \r\n        .then(res => {\r\n            console.log(res)\r\n            message.info(res.statusText)   \r\n            form.resetFields()             \r\n        })\r\n        .catch(err => {                \r\n            console.log(err)\r\n            message.error(err.message)\r\n        })            \r\n        // if (image) {\r\n        //     axios({\r\n        //         method: 'POST',\r\n        //         url: `${api.mediaItems}`,\r\n        //         data: formData\r\n        //     })\r\n        // }\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    }\r\n\r\n    const onImageSelected = (path) => {\r\n        setImage(path);\r\n    } \r\n\r\n    return (\r\n        <div>    \r\n            {props.token && props.token !== null ? (\r\n                <>\r\n                    <Typography.Title level={3}>\r\n                        Create new item                   \r\n                    </Typography.Title>\r\n                    <Form                        \r\n                        {...formItemLayout}\r\n                        form={form}  \r\n                        name=\"itemaddform\"                               \r\n                        onFinish={onFinish}                              \r\n                    >\r\n                        <Form.Item                    \r\n                            name=\"name\"                            \r\n                            label=\"Name\"      \r\n                            rules={[{ required: true, message: 'Please input item name!' }]}                                                             \r\n                        >\r\n                            <Input  />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"description\"\r\n                            label=\"Description\"                                     \r\n                        >\r\n                            <TextArea rows={6} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"image\"\r\n                            label=\"Image\"\r\n                        >                               \r\n                            <ImageUpload onImageSelected={onImageSelected} imageUrl={undefined} />                        \r\n                        </Form.Item>                        \r\n                        <Form.Item {...tailFormItemLayout}>\r\n                            <div>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '8px' }}>\r\n                                    Submit\r\n                                </Button>\r\n                                <Button type=\"ghost\" onClick={onReset} style={{ marginRight: '8px' }}>\r\n                                    Reset\r\n                                </Button>                                \r\n                            </div>                                        \r\n                        </Form.Item>\r\n                    </Form>                    \r\n                </>\r\n            ) : (\r\n                <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\r\n                    extra={<Button type=\"primary\" href=\"/\">Back Home</Button>}\r\n                />\r\n            )}                                                           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemCreate);","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Button, Typography, message, Result, Spin } from 'antd';\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport api from '../api';\r\nimport ImageUpload from \"../components/ImageUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst indicator = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 12,\r\n            offset: 6,\r\n        },\r\n    },\r\n};\r\n\r\nfunction ItemUpdate (props) {    \r\n    const [form] = Form.useForm()    \r\n    const [fields, setFields] = useState();\r\n    const [image, setImage] = useState();    \r\n\r\n    useEffect(() => {\r\n        if (props.match.params.itemID) {\r\n            var id = props.match.params.itemID;\r\n            var url = api.items + \"/\" + id + \"/\";\r\n            axios({\r\n                method: 'GET',\r\n                url: url\r\n            }).then(res => {        \r\n                console.log(res.data);        \r\n                setFields(res.data);\r\n            }).catch(err => {\r\n                console.log(err.message)\r\n            })\r\n        }\r\n    }, [props.match.params.itemID])\r\n\r\n    const onFinish = values => {                                     \r\n        // Image upload\r\n        if (image) {\r\n            var formData = new FormData();\r\n            formData.append('name', values.name);\r\n            formData.append('description', values.description);\r\n            formData.append('token', props.token);\r\n            formData.append('image', image);\r\n            axios({\r\n                method: 'PUT',\r\n                url: `${api.items}/${fields.id}/`,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then(response => {\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        } else {\r\n            const data = {\r\n                \"name\": values.name ? values.name : fields.name,\r\n                \"description\": values.description ? values.description : fields.description,            \r\n                \"token\": props.token,                \r\n                \"image\": image\r\n            }            \r\n            axios({\r\n                method: 'PUT',\r\n                url: `${api.items}/${fields.id}/`,\r\n                data: data                \r\n            })            \r\n            .then(res => {\r\n                console.log(res)\r\n                message.info(res.statusText)                \r\n            })\r\n            .catch(err => {                \r\n                console.log(err)\r\n                message.info(err)\r\n            })  \r\n        }\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n    }\r\n\r\n    const onDelete = () => {        \r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${api.items}/${props.fields.id}/`         \r\n        })            \r\n        .then(res => {\r\n            console.log(res)\r\n            message.info(\"Deleted\")\r\n            props.history.push('/items')            \r\n        })\r\n        .catch(err => {                \r\n            console.log(err)\r\n            message.info(err)\r\n        })\r\n    }\r\n\r\n    const onImageSelected = (path) => {        \r\n        setImage(path);\r\n    } \r\n\r\n    return (\r\n        <div>    \r\n            {props.token && props.token !== null ? (\r\n                <>\r\n                {fields ? (\r\n                    <>\r\n                        <Typography.Title level={3}>\r\n                            {`Update item ${fields.name}`}                   \r\n                        </Typography.Title>\r\n                        <Form\r\n                            {...formItemLayout}             \r\n                            form={form}                                \r\n                            name=\"itemform\"                        \r\n                            initialValues={{\r\n                                name: fields.name,\r\n                                description: fields.description\r\n                            }}       \r\n                            onFinish={onFinish}                              \r\n                        >\r\n                            <Form.Item                    \r\n                                name=\"name\"                            \r\n                                label=\"Name\"      \r\n                                rules={[{ required: true, message: 'Please input item name!' }]}                                                             \r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"description\"\r\n                                label=\"Description\"                                     \r\n                            >\r\n                                <TextArea rows={6} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"image\"\r\n                                label=\"Image\"\r\n                            >                               \r\n                                <ImageUpload onImageSelected={onImageSelected} image={fields.image} />                        \r\n                            </Form.Item>                        \r\n                            <Form.Item {...tailFormItemLayout}>\r\n                                <div>\r\n                                    <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '8px' }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                    <Button type=\"ghost\" onClick={onReset} style={{ marginRight: '8px' }}>\r\n                                        Reset\r\n                                    </Button>\r\n                                    <Button danger type=\"primary\" onClick={onDelete}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>                                        \r\n                            </Form.Item>\r\n                        </Form>             \r\n                    </>\r\n                ) : (\r\n                    <Spin indicator={indicator} />\r\n                )}       \r\n                </>\r\n            ) : (\r\n                <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"Sorry, you are not authorized to access this page.\"\r\n                    extra={<Button type=\"primary\" href=\"/\">Back Home</Button>}\r\n                />\r\n            )}                                                           \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemUpdate);","import { Button, Result, Typography, Form, Input, message } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport ImageUpload from '../components/ImageUpload';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 12,\r\n            offset: 6,\r\n        },\r\n    },\r\n};\r\n\r\nfunction ProfileEdit (props) {\r\n    const [user, setUser] = useState();\r\n    const [form] = Form.useForm()        \r\n    const [image, setImage] = useState();    \r\n\r\n    useEffect(() => {        \r\n        axios({\r\n            method: 'GET',\r\n            url: api.profile,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Token ${props.token}`\r\n            }\r\n        }).then(response => {\r\n            console.log(response.data)\r\n            setUser(response.data)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [props.token])\r\n\r\n    const onFinish = values => {                                     \r\n        // Image upload\r\n        if (image) {\r\n            var formData = new FormData();\r\n            formData.append('name', values.name);\r\n            formData.append('description', values.description);\r\n            formData.append('token', props.token);\r\n            formData.append('image', image);\r\n            axios({\r\n                method: 'PUT',\r\n                url: `${api.users}/${user.id}/`,\r\n                data: formData,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then(response => {\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        } else {\r\n            const data = {\r\n                \"name\": values.name ? values.name : user.name,\r\n                \"description\": values.description ? values.description : user.description,            \r\n                \"token\": props.token,                \r\n                \"image\": image\r\n            }            \r\n            axios({\r\n                method: 'PUT',\r\n                url: `${api.items}/${user.id}/`,\r\n                data: data                \r\n            })            \r\n            .then(res => {\r\n                console.log(res)\r\n                message.info(res.statusText)                \r\n            })\r\n            .catch(err => {                \r\n                console.log(err)\r\n                message.info(err)\r\n            })  \r\n        }\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetuser();\r\n    }\r\n\r\n    const onDelete = () => {        \r\n        axios({\r\n            method: 'DELETE',\r\n            url: `${api.items}/${props.user.id}/`         \r\n        })            \r\n        .then(res => {\r\n            console.log(res)\r\n            message.info(\"Deleted\")\r\n            props.history.push('/items')            \r\n        })\r\n        .catch(err => {                \r\n            console.log(err)\r\n            message.info(err)\r\n        })\r\n    }\r\n\r\n    const onImageSelected = (path) => {        \r\n        setImage(path);\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            {user ? (                \r\n                <>\r\n                    {/* <Row gutter={[16, 16]} style={{ width: 400 }}>\r\n                        <Col span={8}>\r\n                            <Avatar size={96} icon={<UserOutlined />} />\r\n                        </Col>\r\n                        <Col span={16} style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Typography.Title level={3}>{user.username}</Typography.Title>\r\n                            <a href=\"/editprofile\">[Edit]</a>                            \r\n                        </Col>                    \r\n                        <Col span={24} style={{ paddingLeft: '16px' }}>\r\n                            <p ><MailOutlined /> {user.email}</p>                        \r\n                            <p><PhoneOutlined /> 99113355</p>\r\n                            <p><CalendarOutlined /> 2000-05-20</p>\r\n                        </Col>\r\n                    </Row> */}\r\n                    <Typography.Title level={3}>\r\n                        Edit profile\r\n                    </Typography.Title>\r\n                    <Form\r\n                        {...formItemLayout}             \r\n                        form={form}                                \r\n                        name=\"itemform\"                        \r\n                        initialValues={{\r\n                            name: user.username,\r\n                            email: user.email,\r\n                            description: user.profile.description,\r\n                            birth_date: user.profile.birth_date,\r\n                            phone_number: user.profile.phone_number\r\n                        }}       \r\n                        onFinish={onFinish}                              \r\n                    >\r\n                        <Form.Item                    \r\n                            name=\"name\"                            \r\n                            label=\"Name\"      \r\n                            rules={[{ required: true, message: 'Please input item name!' }]}                                                             \r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"description\"\r\n                            label=\"Description\"                                     \r\n                        >\r\n                            <TextArea rows={6} />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"image\"\r\n                            label=\"Image\"\r\n                        >                               \r\n                            <ImageUpload onImageSelected={onImageSelected} image={user.profile.avatar} />                        \r\n                        </Form.Item>                        \r\n                        <Form.Item {...tailFormItemLayout}>\r\n                            <div>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: '8px' }}>\r\n                                    Submit\r\n                                </Button>\r\n                                <Button type=\"ghost\" onClick={onReset} style={{ marginRight: '8px' }}>\r\n                                    Reset\r\n                                </Button>\r\n                                <Button danger type=\"primary\" onClick={onDelete}>\r\n                                    Delete\r\n                                </Button>\r\n                            </div>                                        \r\n                        </Form.Item>\r\n                    </Form> \r\n                </>\r\n            ) : (\r\n                <Result\r\n                    status=\"403\"\r\n                    title=\"403\"\r\n                    subTitle=\"Sorry, you are not authenticated. Please log in first.\"\r\n                    extra={<Button type=\"primary\" href=\"/login\">Go to login page</Button>}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProfileEdit)","import { Breadcrumb, Col, Radio, Row, Select, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport GameWeek from '../components/GameWeek';\r\nimport LeagueTable from '../components/LeagueTable';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\n\r\nconst SeasonList = (props) => {\r\n\r\n    const [leagues, setLeagues] = useState();\r\n    const [leagueID, setLeagueID] = useState(2);\r\n    const [level, setLevel] = useState(1);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {             \r\n            let allseason = res.data.filter(x => x.level === level)\r\n            setLeagues(allseason)                        \r\n            setLeagueID(allseason[allseason.length - 1].id)                                           \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, [level])    \r\n\r\n    function handleChange(value) {\r\n        setLeagueID(value)\r\n    }\r\n\r\n    function onChangeLeague(e) {\r\n        // console.log(e.target.value)\r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { leagues ? (            \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        Улирал\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0' }}>                     \r\n                    <Row gutter={[16, 16]}>\r\n                        <Col xs={24} sm={16}>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '16px' }}>\r\n                                <div>\r\n                                    <strong>Улирал сонгох: </strong>\r\n                                    <Select defaultValue={leagueID} onChange={handleChange}>\r\n                                        {leagues.map(league => {\r\n                                            return (\r\n                                                <Select.Option value={league.id}>{league.year} оны {league.number}-р улирал</Select.Option>\r\n                                            )\r\n                                        })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div>\r\n                                    <Radio.Group onChange={onChangeLeague} defaultValue={level}>\r\n                                        <Radio.Button value={1}>Дээд</Radio.Button>\r\n                                        <Radio.Button value={2}>Чэмпионшип</Radio.Button>                                        \r\n                                    </Radio.Group>\r\n                                </div>\r\n                            </div>                            \r\n                            <LeagueTable id={leagueID ? leagueID : leagues[leagues.length - 1].id} />\r\n                        </Col>\r\n                        <Col xs={24} sm={8}>\r\n                            <GameWeek id={leagueID ? leagueID : leagues[leagues.length - 1].id} />\r\n                        </Col>\r\n                    </Row>                   \r\n                </div>                \r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonList;","import { Badge, Breadcrumb, Card, List, Radio, Select, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { TrophyFilled, TrophyOutlined } from '@ant-design/icons';\r\n\r\nconst ManagerList = (props) => {\r\n     \r\n    const [managers, setManagers] = useState();    \r\n    const [sortType, setSortType] = useState('champ');\r\n    const [level, setLevel] = useState(0);\r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(orderByChamp(res.data))\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                      \r\n    }, []);    \r\n\r\n    function getChampion(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function orderByChamp(data) {\r\n        return data.sort((a, b) => getChampion(b) - getChampion(a))\r\n    }\r\n\r\n    function orderByRunnerup(data) {\r\n        return data.sort((a, b) => getRunnerup(b) - getRunnerup(a))\r\n    }\r\n\r\n    function orderByPoints(data) {\r\n        return data.sort((a, b) => getPoints(b) - getPoints(a))\r\n    }\r\n\r\n    function orderByScore(data) {\r\n        return data.sort((a, b) => getScore(b) - getScore(a))\r\n    }\r\n\r\n    function orderByScoreAway(data) {\r\n        return data.sort((a, b) => getScoreAway(b) - getScoreAway(a))\r\n    }\r\n\r\n    function orderByWin(data) {\r\n        return data.sort((a, b) => getWins(b) - getWins(a))\r\n    }\r\n\r\n    function orderByDraw(data) {\r\n        return data.sort((a, b) => getDraws(b) - getDraws(a))\r\n    }\r\n\r\n    function orderByLoss(data) {\r\n        return data.sort((a, b) => getLosses(b) - getLosses(a))\r\n    }\r\n\r\n    function sortManagers(type) {                   \r\n        switch(type) {\r\n            case \"champ\":                \r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n            case \"runnerup\":                \r\n                setManagers(orderByRunnerup(managers))    \r\n                break;            \r\n            case \"points\": \r\n                setManagers(orderByPoints(managers))\r\n                break;\r\n            case \"score\": \r\n                setManagers(orderByScore(managers))\r\n                break;\r\n            case \"scoreaway\": \r\n                setManagers(orderByScoreAway(managers))\r\n                break;\r\n            case \"win\": \r\n                setManagers(orderByWin(managers))\r\n                break;\r\n            case \"draw\": \r\n                setManagers(orderByDraw(managers))\r\n                break;\r\n            case \"loss\": \r\n                setManagers(orderByLoss(managers))\r\n                break;\r\n            default:\r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n        }  \r\n    }\r\n\r\n    function handleSort(value) {              \r\n        setSortType(value)          \r\n        sortManagers(value)               \r\n    }      \r\n\r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n        setSortType('champ')\r\n        sortManagers('champ')         \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers ? (                        \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        Менежер\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <div>\r\n                        <strong>Эрэмбэлэх: </strong>\r\n                        <Select defaultValue={sortType} style={{ width: 200 }} onChange={handleSort}>\r\n                            <Select.Option value=\"none\">---------</Select.Option>\r\n                            <Select.Option value=\"champ\">Түрүү</Select.Option>\r\n                            <Select.Option value=\"runnerup\">Үзүүр</Select.Option>\r\n                            <Select.Option value=\"points\">Оноо</Select.Option>\r\n                            <Select.Option value=\"score\">Авсан оноо</Select.Option>\r\n                            <Select.Option value=\"scoreaway\">Алдсан оноо</Select.Option>\r\n                            <Select.Option value=\"win\">Хожил</Select.Option>\r\n                            <Select.Option value=\"draw\">Тэнцээ</Select.Option>\r\n                            <Select.Option value=\"loss\">Хожигдол</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={0}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </div>\r\n                <div style={{ margin: '16px 0' }}>\r\n                    <List\r\n                        grid={{\r\n                            gutter: 16,\r\n                            xs: 2,\r\n                            sm: 3,\r\n                            md: 4,\r\n                            lg: 5,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }}\r\n                        dataSource={managers}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <a href={`/managers/${item.id}`}>\r\n                                <Card \r\n                                    hoverable             \r\n                                    size=\"small\"                                                            \r\n                                    title={\r\n                                        <div>\r\n                                            <Avatar shape=\"square\" size={24} style={{ marginRight: '4px' }} src={<img src={item.image} alt=\"teamlogo\" style={{ height: '100%', width: 'auto' }} />} />\r\n                                            {item.name}\r\n                                        </div>\r\n                                    }\r\n                                    extra={\r\n                                        <div style={{ display: 'flex' }}>\r\n                                            <div style={{ marginRight: '8px' }}>\r\n                                                <Badge count={getChampion(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyFilled style={{ color: 'yellow' }} />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <div>\r\n                                                <Badge count={getRunnerup(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyOutlined />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                >\r\n                                    <p>Оноо: {getPoints(item)}</p>                                    \r\n                                    <p>Хожил: {getWins(item)}</p>\r\n                                    <p>Тэнцээ: {getDraws(item)}</p>\r\n                                    <p>Хожигдол: {getLosses(item)}</p>\r\n                                    <p>Авсан: {getScore(item)}</p>\r\n                                    <p>Алдсан: {getScoreAway(item)}</p>\r\n                                </Card>\r\n                                </a>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerList;","import { Spin, Table } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Жил',\r\n        dataIndex: 'year',\r\n    },\r\n    {\r\n        title: 'Улирал',\r\n        dataIndex: 'number',\r\n    },\r\n    {\r\n        title: 'Лиг',\r\n        dataIndex: 'level',\r\n    },\r\n    {\r\n        title: 'Байр',\r\n        dataIndex: 'rank',\r\n    },    \r\n    {\r\n        title: 'Хожил',\r\n        dataIndex: 'wins',\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Тэнцээ',\r\n        dataIndex: 'draws',\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Хожигдол',\r\n        dataIndex: 'losses',\r\n        responsive: ['sm'],\r\n    },    \r\n    {\r\n        title: '+',\r\n        dataIndex: 'score',\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: '-',\r\n        dataIndex: 'score_away',\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Оноо',\r\n        dataIndex: 'points',  \r\n    },\r\n    {\r\n        title: 'Баг',\r\n        dataIndex: 'name',  \r\n        responsive: ['sm'],\r\n    },\r\n];\r\n\r\nconst CareerTable = (props) => {\r\n    \r\n    const [data, setData] = useState();       \r\n    \r\n    useEffect(() => {    \r\n        setData(props.data)                       \r\n    }, [props.data])\r\n\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { data ? (\r\n                <div>\r\n                    <Table columns={columns} dataSource={data} onChange={onChange} pagination={false} />\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}      \r\n        </>  \r\n    );\r\n};\r\n\r\nexport default CareerTable;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { Card, Col, Row, Spin, Typography } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nconst Duel = (props) => {    \r\n    const [matches, setMatches] = useState();    \r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.matches}`\r\n        }).then(res => {                                                 \r\n            setMatches(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                                   \r\n    }, []); \r\n\r\n    function getMatches() {\r\n        return matches.filter(x => (x.home_team.id === props.manager.id && x.away_team.id === props.opponent.id) || (x.home_team.id === props.opponent.id && x.away_team.id === props.manager.id))\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            { matches ? (\r\n                <div>\r\n                    <Card \r\n                        size=\"small\"\r\n                        title={<a href={`/managers/${props.opponent.id}`}>{props.opponent.name}</a>}\r\n                        extra={props.title} \r\n                    >\r\n                        {getMatches().length === 0 ?\r\n                            <div>Мэдээлэл байхгүй.</div>\r\n                        :\r\n                            <div>                                \r\n                                <Typography.Text>Өмнөх учраанууд:</Typography.Text>\r\n                                {getMatches().map(match => {\r\n                                    return (\r\n                                        <div>\r\n                                            <Row gutter={8} style={{ width: '100%', height: '100%', margin: '4px 0' }}>\r\n                                                <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: 0 }}>                                            \r\n                                                    <div>\r\n                                                        { match.home_score > match.away_score ?\r\n                                                            <Avatar size={24} style={{ color: '#fff', backgroundColor: '#87d068', fontSize: '12px' }}>W</Avatar>                                                \r\n                                                        : match.home_score < match.away_score ?\r\n                                                            <Avatar size={24} style={{ color: '#f56a00', backgroundColor: '#fde3cf', fontSize: '12px' }}>L</Avatar>\r\n                                                        :\r\n                                                            <Avatar size={24} style={{ fontSize: '12px' }}>D</Avatar>\r\n                                                        }                                                \r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {match.home_team.name}\r\n                                                    </div>                                            \r\n                                                </Col>\r\n                                                <Col span={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>                                        \r\n                                                    <Typography.Text>{match.home_score} - {match.away_score}</Typography.Text>\r\n                                                </Col>\r\n                                                <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>                                                                                                                                    \r\n                                                    <div>\r\n                                                        {match.away_team.name}\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        { match.home_score < match.away_score ?\r\n                                                            <Avatar size={24}  style={{ color: '#fff', backgroundColor: '#87d068', fontSize: '12px' }}>W</Avatar>                                                \r\n                                                        : match.home_score > match.away_score ?\r\n                                                            <Avatar size={24}  style={{ color: '#f56a00', backgroundColor: '#fde3cf', fontSize: '12px' }}>L</Avatar>\r\n                                                        :\r\n                                                            <Avatar size={24} style={{ fontSize: '12px' }}>D</Avatar>\r\n                                                        }                                                \r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>                                                \r\n                                        </div>\r\n                                    )\r\n                                })}                                \r\n                            </div>\r\n                        }                        \r\n                    </Card>                    \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Duel;","import React, { useEffect, useState } from 'react';\r\nimport Duel from './Duel';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { Spin, List } from 'antd';\r\n\r\nconst DuelInfo = (props) => {\r\n\r\n    const [managers, setManagers] = useState();        \r\n    const [duels, setDuels] = useState();    \r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                                 \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });             \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.duels}`\r\n        }).then(res => {                                                     \r\n            setDuels(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });              \r\n    }, []);    \r\n\r\n    function getOpponents() {\r\n        let result = []\r\n        managers.forEach(element => {            \r\n            let duel = getDuel(props.manager, element)\r\n            if (duel !== null) {      \r\n                let item = { manager: element, title: duel }          \r\n                result.push(item)\r\n            }            \r\n        });\r\n        return result\r\n    }\r\n    \r\n    function getDuel(manager, opponent) {\r\n        let duel = duels.filter(x => (x.team1.id === manager.id && x.team2.id === opponent.id) || (x.team1.id === opponent.id && x.team2.id === manager.id))        \r\n        let win = 0\r\n        let draw = 0\r\n        let loss = 0\r\n        if (duel.length > 0) {\r\n            if (duel[0].team1.id === manager.id) {\r\n                win += duel[0].win1\r\n                draw += duel[0].draw\r\n                loss += duel[0].win2\r\n            } else if (duel[0].team2.id === manager.id) {\r\n                win += duel[0].win2\r\n                draw += duel[0].draw\r\n                loss += duel[0].win1\r\n            }\r\n            return win.toString() + \"W - \" + draw.toString() + \"D - \" + loss.toString() + \"L\"\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers && duels ? (\r\n                <div>\r\n                    <List\r\n                        grid={{\r\n                            gutter: 16,\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 2,\r\n                            lg: 3,\r\n                            xl: 3,\r\n                            xxl: 4,\r\n                        }}\r\n                        pagination={{\r\n                            pageSize: 9\r\n                        }}\r\n                        dataSource={getOpponents()}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <Duel manager={props.manager} opponent={item.manager} title={item.title} />\r\n                            </List.Item>                          \r\n                        )}\r\n                    />                     \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuelInfo;","import { Breadcrumb, Spin, Avatar, Typography, Row, Col, Statistic, Radio } from 'antd';\r\nimport { FlagOutlined, FrownOutlined, MehOutlined, MinusOutlined, PlusOutlined, ProjectOutlined, SmileOutlined, TrophyOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport CareerTable from '../components/CareerTable';\r\nimport DuelInfo from '../duel/DuelInfo';\r\n\r\nconst ManagerDetail = (props) => {\r\n\r\n    const [manager, setManager] = useState();    \r\n    const [level, setLevel] = useState(0);\r\n    const [leagues, setLeagues] = useState();    \r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.itemID;\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}/${id}`\r\n        }).then(res => {            \r\n            console.log(manager)             \r\n            setManager(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {                   \r\n            setLeagues(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, [props.match])        \r\n\r\n    function getChampion(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getThird(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_third\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_third\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getVanga(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_vanga\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_vanga\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getAverageScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageScoreAway(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAveragePoints(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageTopScorer(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageWins(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageDraws(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageLosses(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScoreAway() {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchPoints(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchTopScorerRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchWinRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchDrawRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchLossRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getTeamScoreAway(league, manager) {\r\n        let res = 0\r\n        league.gameweeks.forEach(week => {\r\n            week.matches.forEach(match => {\r\n                if (match.home_team.id === manager.id) {\r\n                    res += match.away_score\r\n                } else if (match.away_team.id === manager.id) {\r\n                    res += match.home_score\r\n                }\r\n            })\r\n        })\r\n        return res\r\n    }\r\n\r\n    function getTeams() {\r\n        let teams = []\r\n        let list = level === 0 ? leagues : leagues.filter(x => x.level === level)\r\n        list.forEach(league => {\r\n            let team = league.table.teams.find(x => x.manager.id === manager.id)      \r\n            if (team) { \r\n                let data = {\r\n                    id: team.id,\r\n                    name: team.name,\r\n                    rank: team.rank,\r\n                    points: team.points,\r\n                    score: team.score,\r\n                    score_away: getTeamScoreAway(league, team.manager),\r\n                    wins: team.wins,\r\n                    draws: team.draws,\r\n                    losses: team.losses,\r\n                    year: league.year,\r\n                    number: league.number\r\n                }     \r\n                if (league.level === 1) {\r\n                    data.level = \"Дээд\"\r\n                } else if (league.level === 2) {\r\n                    data.level = \"Чэмпионшип\"\r\n                }\r\n                teams.push(data)\r\n            }            \r\n        });\r\n        return teams;\r\n    }\r\n\r\n    function onChangeLevel(e) {        \r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { manager && leagues ? (            \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/managers\">Менежер</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        {manager.name}\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0', padding: '16px', backgroundColor: '#fff' }}>    \r\n                    <Row gutter={[16, 16]}>\r\n                        <Col xs={24} sm={12} style={{ textAlign: 'end' }}>                            \r\n                            <Avatar shape=\"square\" size={180} src={<img src={manager.image} alt=\"teamlogo\" style={{ height: '100%', width: 'auto' }} />} />                    \r\n                        </Col>\r\n                        <Col xs={24} sm={12}>\r\n                            {/* <Typography.Title level={3} style={{ margin: 0 }}>Менежер</Typography.Title>      */}\r\n                            <Typography.Title level={2} style={{ margin: 0 }}>{manager.name}</Typography.Title>                           \r\n                            <Typography.Title level={5} style={{ marginBottom: 0 }}>Түрүү - {getChampion(manager, level)}</Typography.Title>\r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Үзүүр - {getRunnerup(manager, level)}</Typography.Title>          \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>3-р байр - {getThird(manager, level)}</Typography.Title>                     \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Мэргэн бууч - {getTopScorer(manager, level)}</Typography.Title>     \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Ванга - {getVanga(manager, level)}</Typography.Title>                                \r\n                        </Col>                    \r\n                    </Row>           \r\n                    <div style={{ margin: '16px' }}>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={level}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <Row gutter={16} style={{ margin: '8px' }}>\r\n                        <Col xs={24} sm={24} md={12}>\r\n                            <Row>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <TrophyOutlined style={{ fontSize: '24px' }} />   \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <PlusOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <MinusOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <ProjectOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>                                                \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Түрүү\" value={getChampion(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт +\" value={getScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт -\" value={getScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт оноо\" value={getPoints(manager, level)} />  \r\n                                </Col>                                   \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дэд байр\" value={getRunnerup(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"+ (1 Лигт)\" value={getAverageScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"- (1 Лигт)\" value={getAverageScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Оноо (1 Лигт)\" value={getAveragePoints(manager, level)} />  \r\n                                </Col>                        \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Гутгаар байр\" value={getThird(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"+ (1 тоглолтод)\" value={getAverageMatchScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"- (1 тоглолтод)\" value={getAverageMatchScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Оноо (1 тоглолтод)\" value={getAverageMatchPoints(manager, level)} />  \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={12}>\r\n                            <Row>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <FlagOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <SmileOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <MehOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <FrownOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Мэргэн бууч\" value={getTopScorer(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт хожил\" value={getWins(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт тэнцээ\" value={getDraws(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт хожигдол\" value={getLosses(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж МБ\" value={getAverageTopScorer(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж хожил\" value={getAverageWins(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж тэнцээ\" value={getAverageDraws(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж хожигдол\" value={getAverageLosses(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"МБ хувь\" value={`${getMatchTopScorerRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Хожлын хувь\" value={`${getMatchWinRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Тэнцээний хувь\" value={`${getMatchDrawRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Хожигдлын хувь\" value={`${getMatchLossRate(manager, level)}%`} />    \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>                                                  \r\n                    </Row>                   \r\n                    <div style={{ margin: '16px' }}>\r\n                        <Typography.Title level={4}>Түүх</Typography.Title>\r\n                        <CareerTable data={getTeams()} />\r\n                    </div>\r\n                    <div style={{ margin: '16px' }}>\r\n                        <Typography.Title level={4}>Өрсөлдөгчид</Typography.Title>\r\n                        <DuelInfo manager={manager} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerDetail;","import { Spin, Table } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Байр',\r\n        dataIndex: 'rank',\r\n    },\r\n    {\r\n        title: 'Баг',\r\n        dataIndex: 'manager',        \r\n        render: item => <img src={item.image} alt=\"teamlogo\" style={{ width: 'auto', height: '24px' }} />\r\n    },    \r\n    {\r\n        title: 'Менежер',\r\n        dataIndex: 'manager',        \r\n        render: item => \r\n        <a href={`/managers/${item.id}`}>                        \r\n            {` ${item.name}`}\r\n        </a>     \r\n    },\r\n    {\r\n        title: 'Тоо',\r\n        dataIndex: 'number',        \r\n    },\r\n];\r\n\r\nconst StatsTable = (props) => {\r\n\r\n    const [data, setData] = useState();       \r\n    \r\n    useEffect(() => {    \r\n        console.log(props.data)\r\n        setData(props.data)                       \r\n    }, [props.data])\r\n\r\n    return (        \r\n        <div>\r\n            { data ? (\r\n                <div>\r\n                    <Table columns={columns} dataSource={data} size=\"small\" pagination={{ pageSize: 10, }} showHeader={false} />\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsTable","import { EyeOutlined, FlagOutlined, FrownOutlined, MehOutlined, MinusOutlined, PlusOutlined, ProjectOutlined, SmileOutlined, ToTopOutlined, TrophyFilled, TrophyOutlined } from '@ant-design/icons';\r\nimport { Breadcrumb, Card, Col, Radio, Row, Spin } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport StatsTable from './StatsTable';\r\n\r\nconst StatsList = (props) => {\r\n\r\n    const [managers, setManagers] = useState();        \r\n    const [level, setLevel] = useState(0);\r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                          \r\n    }, []);    \r\n\r\n    function getChampion(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getThird(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_third\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_third\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getAppearance(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_appearance\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getVanga(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_vanga\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_vanga\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function orderByChamp(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getChampion(b, level) - getChampion(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getChampion(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByRunnerup(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getRunnerup(b, level) - getRunnerup(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getRunnerup(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByThird(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getThird(b, level) - getThird(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getThird(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByAppearance(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getAppearance(b, level) - getAppearance(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getAppearance(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByTopScorer(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getTopScorer(b, level) - getTopScorer(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getTopScorer(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByVanga(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getVanga(b, level) - getVanga(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getVanga(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }  \r\n    \r\n    function orderByPoints(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getPoints(b, level) - getPoints(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getPoints(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }  \r\n\r\n    function orderByScore(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getScore(b, level) - getScore(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getScore(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }  \r\n\r\n    function orderByScoreAway(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getScoreAway(b, level) - getScoreAway(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getScoreAway(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n    \r\n    function orderByWins(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getWins(b, level) - getWins(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getWins(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n\r\n    function orderByDraws(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getDraws(b, level) - getDraws(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getDraws(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n\r\n    function orderByLosses(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getLosses(b, level) - getLosses(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getLosses(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n    \r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers ? (\r\n                <div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/\">Нүүр</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            Статистик\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>            \r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={level}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>                                        \r\n                        </Radio.Group>\r\n                    </div>                             \r\n                    <Row gutter={16}>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>\r\n                            <Card title=\"Түрүү\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyFilled style={{ color: 'yellow' }} />} />}>\r\n                                <StatsTable data={orderByChamp(managers, 10)} />\r\n                            </Card>                        \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>\r\n                            <Card title=\"Үзүүр\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyOutlined />} />}>\r\n                                <StatsTable data={orderByRunnerup(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"3-р байр\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyFilled style={{ color: '#cd7f32' }} />} />}>\r\n                                <StatsTable data={orderByThird(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Оролцсон\" size=\"small\" extra={<Avatar shape=\"square\" icon={<ToTopOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByAppearance(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Мэргэн бууч\" size=\"small\" extra={<Avatar shape=\"square\" icon={<FlagOutlined style={{ color: '#000' }} />} />}>                                \r\n                                <StatsTable data={orderByTopScorer(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Ванга\" size=\"small\" extra={<Avatar shape=\"square\" icon={<EyeOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByVanga(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Оноо\" size=\"small\" extra={<Avatar shape=\"square\" icon={<ProjectOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByPoints(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Авсан\" size=\"small\" extra={<Avatar shape=\"square\" icon={<PlusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByScore(managers, 10)} />\r\n                            </Card> \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Алдсан\" size=\"small\" extra={<Avatar shape=\"square\" icon={<MinusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByScoreAway(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Хожил\" size=\"small\" extra={<Avatar shape=\"square\" icon={<SmileOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByWins(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Тэнцээ\" size=\"small\" extra={<Avatar shape=\"square\" icon={<MehOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByDraws(managers, 10)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} lg={6} xl={4} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Хожигдол\" size=\"small\" extra={<Avatar shape=\"square\" icon={<FrownOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByLosses(managers, 10)} />\r\n                            </Card>\r\n                        </Col>                    \r\n                    </Row>                                                                         \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsList;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { Breadcrumb, Card, Col, Row, Spin, Typography, Select } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\n\r\nconst DuelCompare = (props) => {    \r\n    const [matches, setMatches] = useState();    \r\n    const [managers, setManagers] = useState();  \r\n    const [duels, setDuels] = useState();   \r\n    const [team1, setTeam1] = useState();\r\n    const [team2, setTeam2] = useState();  \r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.matches}`\r\n        }).then(res => {                                                 \r\n            setMatches(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        }); \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.duels}`\r\n        }).then(res => {                                                     \r\n            setDuels(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });       \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                                 \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                                   \r\n    }, []); \r\n\r\n    function getDuel(manager, opponent) {\r\n        let duel = duels.filter(x => (x.team1.id === manager.id && x.team2.id === opponent.id) || (x.team1.id === opponent.id && x.team2.id === manager.id))        \r\n        let win = 0\r\n        let draw = 0\r\n        let loss = 0\r\n        if (duel.length > 0) {\r\n            if (duel[0].team1.id === manager.id) {\r\n                win += duel[0].win1\r\n                draw += duel[0].draw\r\n                loss += duel[0].win2\r\n            } else if (duel[0].team2.id === manager.id) {\r\n                win += duel[0].win2\r\n                draw += duel[0].draw\r\n                loss += duel[0].win1\r\n            }\r\n            return \"Хожил: \" + win.toString() + \" - Тэнцээ: \" + draw.toString() + \" - Хожил: \" + loss.toString() \r\n        }\r\n        return null\r\n    }\r\n\r\n    function getMatches() {\r\n        return matches.filter(x => (x.home_team.id === team1.id && x.away_team.id === team2.id) || (x.home_team.id === team2.id && x.away_team.id === team1.id))\r\n    }    \r\n\r\n    function getWins(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getMatchWinRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getPoints(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getAverageMatchScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScoreAway(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function handleChange1(value) {\r\n        setTeam1(managers.find(x => x.id === value))\r\n    }\r\n\r\n    function handleChange2(value) {\r\n        setTeam2(managers.find(x => x.id === value))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { matches && duels && managers ? (\r\n                <div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/\">Нүүр</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            Харьцуулалт\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{ margin: '16px 0' }}>\r\n                    <strong>Баг 1: </strong>\r\n                    <Select defaultValue={0} onChange={handleChange1} style={{ width: '200px' }}>\r\n                        <Select.Option value={0}>----------</Select.Option>\r\n                        {managers.map(manager => {\r\n                            return (\r\n                                <Select.Option value={manager.id}>{manager.name}</Select.Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <strong> Баг 2: </strong>\r\n                    <Select defaultValue={0} onChange={handleChange2} style={{ width: '200px' }}>\r\n                        <Select.Option value={0}>----------</Select.Option>\r\n                        {managers.map(manager => {\r\n                            return (\r\n                                <Select.Option value={manager.id}>{manager.name}</Select.Option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    </div>\r\n                    { team1 && team2 ? (\r\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                            <Card \r\n                                size=\"small\"\r\n                                style={{ width: '500px' }}\r\n                                title={\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <div>\r\n                                            <a href={`/managers/${team1.id}`}>{team1.name}</a>\r\n                                        </div>             \r\n                                        <div>                                    \r\n                                            {getDuel(team1, team2)}\r\n                                        </div>                           \r\n                                        <div>\r\n                                            <a href={`/managers/${team2.id}`}>{team2.name}</a>\r\n                                        </div>\r\n                                    </div>                                    \r\n                                }                                \r\n                            >\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'  }}>                                    \r\n                                    <div>\r\n                                        <strong>{getWins(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Хожил\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getWins(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'  }}>                                    \r\n                                    <div>\r\n                                        <strong>{getDraws(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Тэнцээ\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getDraws(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getLosses(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Хожигдол\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getLosses(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getMatchWinRate(team1, 0)}%</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Хожлын хувь\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getMatchWinRate(team2, 0)}%</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getPoints(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Оноо\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getPoints(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getScore(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        +\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getScore(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getScoreAway(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        -\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getScoreAway(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getAverageMatchScore(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        + (Дундаж)\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getAverageMatchScore(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getAverageMatchScoreAway(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        - (Дундаж)\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getAverageMatchScoreAway(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between'}}>                                    \r\n                                    <div>\r\n                                        <strong>{getTopScorer(team1, 0)}</strong>\r\n                                    </div>\r\n                                    <div>\r\n                                        Мэргэн бууч\r\n                                    </div>\r\n                                    <div>\r\n                                        <strong>{getTopScorer(team2, 0)}</strong>\r\n                                    </div>\r\n                                </div>                               \r\n                                {getMatches().length === 0 ?\r\n                                    <div>Мэдээлэл байхгүй.</div>\r\n                                :\r\n                                    <div>                                \r\n                                        <Typography.Text>Өмнөх учраанууд:</Typography.Text>\r\n                                        {getMatches().map(match => {\r\n                                            return (\r\n                                                <div>\r\n                                                    <Row gutter={8} style={{ width: '100%', height: '100%', margin: '4px 0' }}>\r\n                                                        <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: 0 }}>                                            \r\n                                                            <div>\r\n                                                                { match.home_score > match.away_score ?\r\n                                                                    <Avatar size={24} style={{ color: '#fff', backgroundColor: '#87d068', fontSize: '12px' }}>W</Avatar>                                                \r\n                                                                : match.home_score < match.away_score ?\r\n                                                                    <Avatar size={24} style={{ color: '#f56a00', backgroundColor: '#fde3cf', fontSize: '12px' }}>L</Avatar>\r\n                                                                :\r\n                                                                    <Avatar size={24} style={{ fontSize: '12px' }}>D</Avatar>\r\n                                                                }                                                \r\n                                                            </div>\r\n                                                            <div>\r\n                                                                {match.home_team.name}\r\n                                                            </div>                                            \r\n                                                        </Col>\r\n                                                        <Col span={8} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>                                        \r\n                                                            <Typography.Text>{match.home_score} - {match.away_score}</Typography.Text>\r\n                                                        </Col>\r\n                                                        <Col span={8} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>                                                                                                                                    \r\n                                                            <div>\r\n                                                                {match.away_team.name}\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                { match.home_score < match.away_score ?\r\n                                                                    <Avatar size={24}  style={{ color: '#fff', backgroundColor: '#87d068', fontSize: '12px' }}>W</Avatar>                                                \r\n                                                                : match.home_score > match.away_score ?\r\n                                                                    <Avatar size={24}  style={{ color: '#f56a00', backgroundColor: '#fde3cf', fontSize: '12px' }}>L</Avatar>\r\n                                                                :\r\n                                                                    <Avatar size={24} style={{ fontSize: '12px' }}>D</Avatar>\r\n                                                                }                                                \r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>                                                \r\n                                                </div>\r\n                                            )\r\n                                        })}                                \r\n                                    </div>\r\n                                }   \r\n                            </Card>       \r\n                        </div> \r\n                    ) : (\r\n                        <></>\r\n                    )}                                \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuelCompare;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { Breadcrumb, Spin, Table, Tag, Typography } from 'antd';\r\n\r\nconst columns = [    \r\n    {\r\n        title: 'Менежер',\r\n        dataIndex: 'manager',\r\n        key: 'manager',\r\n        render: item => <a href={`/managers/${item.id}`}>{item.name}</a>\r\n    },\r\n    {\r\n        title: 'Хожил',\r\n        dataIndex: 'wins',\r\n        key: 'wins',\r\n        sorter: {\r\n            compare: (a, b) => b.wins - a.wins,            \r\n        },\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Тэнцээ',\r\n        dataIndex: 'draws',\r\n        key: 'draws',\r\n        sorter: {\r\n            compare: (a, b) => b.draws - a.draws,            \r\n        },\r\n        responsive: ['md'],\r\n    },\r\n    {\r\n        title: 'Хожигдол',\r\n        dataIndex: 'losses',\r\n        key: 'losses',\r\n        sorter: {\r\n            compare: (a, b) => b.losses - a.losses,            \r\n        },\r\n        responsive: ['md'],\r\n    },    \r\n    {\r\n        title: '+',\r\n        dataIndex: 'score',\r\n        key: 'score',\r\n        sorter: {\r\n            compare: (a, b) => b.score - a.score,            \r\n        },\r\n        responsive: ['sm'],\r\n    },\r\n    {\r\n        title: 'Оноо',\r\n        dataIndex: 'points',\r\n        key: 'points',\r\n        sorter: {\r\n            compare: (a, b) => b.points - a.points,            \r\n        },        \r\n    },\r\n    {\r\n        title: 'Улирал 1',\r\n        dataIndex: 'league1',\r\n        key: 'league1',\r\n        sorter: {\r\n            compare: (a, b) => a.league1 - b.league1,            \r\n        },\r\n        render: item => <Tag color={item === 0 ? 'white' : item < 3 ? 'green' : item < 9 ? 'geekblue' : 'volcano'}>{item}</Tag>        \r\n    },\r\n    {\r\n        title: 'Улирал 2',\r\n        dataIndex: 'league2',\r\n        key: 'league2',\r\n        sorter: {\r\n            compare: (a, b) => a.league2 - b.league2,            \r\n        },\r\n        render: item => <Tag color={item === 0 ? 'white' : item < 3 ? 'green' : item < 9 ? 'geekblue' : 'volcano'}>{item}</Tag>        \r\n    },\r\n    {\r\n        title: 'Улирал 3',\r\n        dataIndex: 'league3',\r\n        key: 'league3',\r\n        sorter: {\r\n            compare: (a, b) => a.league3 - b.league3,            \r\n        },\r\n        render: item => <Tag color={item === 0 ? 'white' : item < 3 ? 'green' : item < 9 ? 'geekblue' : 'volcano'}>{item}</Tag>        \r\n    },\r\n    {\r\n        title: 'Улирал 4',\r\n        dataIndex: 'league4',\r\n        key: 'league4',\r\n        sorter: {\r\n            compare: (a, b) => a.league4 - b.league4,            \r\n        },\r\n        render: item => <Tag color={item === 0 ? 'white' : item < 3 ? 'green' : item < 9 ? 'geekblue' : 'volcano'}>{item}</Tag>        \r\n    },\r\n];\r\n\r\nconst Season19 = (props) => {\r\n\r\n    const [season19, setSeason19] = useState();\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.league19}`\r\n        }).then(res => {                    \r\n            setSeason19(res.data)                                         \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, [])    \r\n\r\n    return (\r\n        <div>\r\n            { season19 ? (\r\n                <div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/\">Нүүр</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            19-20 оны Улирал\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{ margin: '16px 0' }}>\r\n                        <Typography.Title level={4}>2019-2020 оны улирал</Typography.Title>\r\n                        <Table columns={columns} dataSource={season19[0].teams} pagination={false} />\r\n                        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\r\n                            <strong>Тайлбар:</strong>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginTop: '8px' }}>\r\n                                <div>\r\n                                    <Tag color='green'>1-2</Tag> - Шагналт байр        \r\n                                </div>\r\n                                <div>\r\n                                    <Tag color='geekblue'>4-8</Tag> - Аюулгүй бүс        \r\n                                </div>\r\n                                <div>\r\n                                    <Tag color='volcano'>9-10</Tag> - Унах бүс         \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Season19;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './layout/Home';\r\nimport Login from './user/Login';\r\nimport Signup from './user/Signup';\r\nimport Profile from './user/Profile';\r\nimport ItemList from './item/ItemList';\r\nimport ItemDetail from './item/ItemDetail';\r\nimport ItemCreate from './item/ItemCreate';\r\nimport ItemUpdate from './item/ItemUpdate';\r\nimport ProfileEdit from './user/ProfileEdit';\r\nimport SeasonList from './season/SeasonList';\r\nimport ManagerList from './manager/ManagerList';\r\nimport ManagerDetail from './manager/ManagerDetail';\r\nimport StatsList from './stats/StatsList';\r\nimport DuelCompare from './duel/DuelCompare';\r\nimport Season19 from './season/Season19';\r\n\r\nfunction BaseRouter () {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            {/* Item urls */}\r\n            <Route exact path=\"/items\" component={ItemList} />\r\n            <Route exact path=\"/items/:itemID\" component={ItemDetail} />\r\n            <Route exact path=\"/newitem\" component={ItemCreate} />\r\n            <Route exact path=\"/updateitem/:itemID\" component={ItemUpdate} />\r\n            {/* User urls */}\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route exact path=\"/editprofile\" component={ProfileEdit} />\r\n            {/* Pages */}\r\n            <Route exact path=\"/seasons\" component={SeasonList} />\r\n            <Route exact path=\"/managers\" component={ManagerList} />\r\n            <Route exact path=\"/managers/:itemID\" component={ManagerDetail} />\r\n            <Route exact path=\"/stats\" component={StatsList} />\r\n            <Route exact path=\"/compare\" component={DuelCompare} />\r\n            <Route exact path=\"/season19\" component={Season19} />\r\n        </Switch>\r\n    )    \r\n}\r\nexport default BaseRouter;","import 'antd/dist/antd.css';\r\nimport React, { Component } from 'react';\r\nimport { HashRouter, BrowserRouter as Router } from 'react-router-dom';\r\nimport CustomLayout from './layout/Layout';\r\nimport BaseRouter from './routes';\r\nimport * as actions from './store/actions/auth';\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {            \r\n        this.props.onTryAutoSignup();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <HashRouter> \r\n                    <CustomLayout {...this.props}>\r\n                        <BaseRouter />\r\n                    </CustomLayout>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n    \r\nconst mapStateToProps = state => {\r\n    return {        \r\n        username: state.username\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    username: localStorage.getItem('username'),\r\n    error: null,\r\n    loading: false    \r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.token,        \r\n        username: action.username,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {        \r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {        \r\n        token: null,\r\n        username: null\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducer from './store/reducers/auth';\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(reducer, composeEnhances(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n    app,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals  \r\nreportWebVitals();\r\n"],"sourceRoot":""}