[{"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\index.js":"1","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\App.js":"2","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\reportWebVitals.js":"3","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\reducers\\auth.js":"4","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\routes.js":"5","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Layout.js":"6","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\actions\\auth.js":"7","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\actions\\actionTypes.js":"8","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\utility.js":"9","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Menu.js":"10","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\api.js":"11","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\About.js":"12","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Settings.js":"13","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Home.js":"14","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Profile.js":"15","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Login.js":"16","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Signup.js":"17","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\ProfileEdit.js":"18","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Logout.js":"19","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemDetail.js":"20","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemList.js":"21","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemUpdate.js":"22","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemCreate.js":"23","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\SeasonList.js":"24","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\Season19.js":"25","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\SeasonCreate.js":"26","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsMatch.js":"27","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsSeason.js":"28","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsList.js":"29","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\manager\\ManagerList.js":"30","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\manager\\ManagerDetail.js":"31","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\GameweekUpdate.js":"32","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\DuelCompare.js":"33","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\Blogs.js":"34","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\BlogCreate.js":"35","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\BlogDetail.js":"36","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\LeagueTableMini.js":"37","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\ImageUpload.js":"38","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\DuelInfo.js":"39","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\CareerTable.js":"40","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\LeagueTable.js":"41","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\GameWeek.js":"42","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsTable.js":"43","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\Duel.js":"44","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsLeague.js":"45"},{"size":911,"mtime":1612522156228,"results":"46","hashOfConfig":"47"},{"size":1068,"mtime":1612683949938,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1612522156232,"results":"49","hashOfConfig":"47"},{"size":1409,"mtime":1612522156236,"results":"50","hashOfConfig":"47"},{"size":3379,"mtime":1621858003485,"results":"51","hashOfConfig":"47"},{"size":6385,"mtime":1613202123101,"results":"52","hashOfConfig":"47"},{"size":4106,"mtime":1612522156235,"results":"53","hashOfConfig":"47"},{"size":211,"mtime":1612522156235,"results":"54","hashOfConfig":"47"},{"size":140,"mtime":1612522156236,"results":"55","hashOfConfig":"47"},{"size":10677,"mtime":1613216119101,"results":"56","hashOfConfig":"47"},{"size":947,"mtime":1621856925792,"results":"57","hashOfConfig":"47"},{"size":1147,"mtime":1613198133318,"results":"58","hashOfConfig":"47"},{"size":26726,"mtime":1613215976027,"results":"59","hashOfConfig":"47"},{"size":14945,"mtime":1613212815666,"results":"60","hashOfConfig":"47"},{"size":2790,"mtime":1613196543349,"results":"61","hashOfConfig":"47"},{"size":4756,"mtime":1613196842078,"results":"62","hashOfConfig":"47"},{"size":6958,"mtime":1613196838008,"results":"63","hashOfConfig":"47"},{"size":7684,"mtime":1612522156237,"results":"64","hashOfConfig":"47"},{"size":1306,"mtime":1613196671722,"results":"65","hashOfConfig":"47"},{"size":1736,"mtime":1612522156228,"results":"66","hashOfConfig":"47"},{"size":2944,"mtime":1612522156229,"results":"67","hashOfConfig":"47"},{"size":7250,"mtime":1612522156229,"results":"68","hashOfConfig":"47"},{"size":4701,"mtime":1612522156228,"results":"69","hashOfConfig":"47"},{"size":3753,"mtime":1621856925795,"results":"70","hashOfConfig":"47"},{"size":5151,"mtime":1613196316301,"results":"71","hashOfConfig":"47"},{"size":5128,"mtime":1612694163585,"results":"72","hashOfConfig":"47"},{"size":14454,"mtime":1621856925798,"results":"73","hashOfConfig":"47"},{"size":14853,"mtime":1621862381813,"results":"74","hashOfConfig":"47"},{"size":3783,"mtime":1621858393869,"results":"75","hashOfConfig":"47"},{"size":14819,"mtime":1613206528912,"results":"76","hashOfConfig":"47"},{"size":29679,"mtime":1613196302730,"results":"77","hashOfConfig":"47"},{"size":6369,"mtime":1612783393632,"results":"78","hashOfConfig":"47"},{"size":21918,"mtime":1613103476641,"results":"79","hashOfConfig":"47"},{"size":4237,"mtime":1613196571050,"results":"80","hashOfConfig":"47"},{"size":5665,"mtime":1613215754014,"results":"81","hashOfConfig":"47"},{"size":3188,"mtime":1613216106027,"results":"82","hashOfConfig":"47"},{"size":2986,"mtime":1612623054064,"results":"83","hashOfConfig":"47"},{"size":1904,"mtime":1613124459248,"results":"84","hashOfConfig":"47"},{"size":3333,"mtime":1612522156227,"results":"85","hashOfConfig":"47"},{"size":2149,"mtime":1613103476638,"results":"86","hashOfConfig":"47"},{"size":4541,"mtime":1613103476639,"results":"87","hashOfConfig":"47"},{"size":7841,"mtime":1613206496676,"results":"88","hashOfConfig":"47"},{"size":1469,"mtime":1621856925806,"results":"89","hashOfConfig":"47"},{"size":5870,"mtime":1613103476640,"results":"90","hashOfConfig":"47"},{"size":17644,"mtime":1621858101145,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"hia78g",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\index.js",[],["189","190"],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\App.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\reportWebVitals.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\reducers\\auth.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\routes.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Layout.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\actions\\auth.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\store\\utility.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Menu.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\api.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\About.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Settings.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\layout\\Home.js",["191"],"import { Button, Card, Col, Divider, Row, Typography, List, Radio, Spin, Avatar } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport LeagueTableMini from '../components/LeagueTableMini';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport CountUp from 'react-countup';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nfunction Home (props) {    \r\n    const [ellipsis, setEllipsis] = useState(true);\r\n    const [posts, setPosts] = useState();\r\n    const [leagues, setLeagues] = useState();\r\n    const [managers, setManagers] = useState();    \r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.posts}/`\r\n        }).then(res => {            \r\n            console.log(res.data)\r\n            setPosts(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        })\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}/`\r\n        }).then(res => {                         \r\n            setLeagues(res.data)                                                                        \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        }); \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}/`\r\n        }).then(res => {                         \r\n            setManagers(res.data)                                                                        \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, [])  \r\n\r\n    function getLastWeek() {\r\n        let result;\r\n        let gameweeks = leagues[leagues.length - 1].gameweeks;\r\n        let lastweek;    \r\n        gameweeks.forEach(week => {\r\n            let matches = week.matches\r\n            matches.forEach(match => {\r\n                if (match.home_score === 0 && match.away_score === 0) {\r\n                    if (!result) {\r\n                        result = lastweek\r\n                    }          \r\n                }\r\n            })\r\n            lastweek = week\r\n        })\r\n        return result ? result : gameweeks[gameweeks.length - 1]\r\n    }\r\n\r\n    function getLastWeekTopScorers() {        \r\n        let week = getLastWeek()                \r\n        let list = []\r\n        week.matches.forEach(match => {\r\n            let item1 = {\r\n                manager: match.home_team,\r\n                score: match.home_score\r\n            }\r\n            let item2 = {\r\n                manager: match.away_team,\r\n                score: match.away_score\r\n            }\r\n            list.push(item1)\r\n            list.push(item2)\r\n        })\r\n        return list.sort((a, b) => b.score - a.score).slice(0, 5)\r\n    }\r\n\r\n    function getSeasonTopWinners() {\r\n        let list = []        \r\n        managers.forEach(manager => {\r\n            let wins = 0\r\n            manager.career.forEach(career => {\r\n                wins += career.total_win\r\n            })\r\n            let item = {\r\n                manager: manager,\r\n                wins: wins       \r\n            }\r\n            list.push(item)\r\n        })        \r\n        return list.sort((a, b) => b.wins - a.wins).slice(0, 5)\r\n    }\r\n\r\n    function getSeasonTopScorers() {\r\n        let list = []        \r\n        managers.forEach(manager => {\r\n            let score = 0\r\n            manager.career.forEach(career => {\r\n                score += career.total_score\r\n            })\r\n            let item = {\r\n                manager: manager,\r\n                score: score       \r\n            }\r\n            list.push(item)\r\n        })        \r\n        return list.sort((a, b) => b.score - a.score).slice(0, 5)\r\n    }\r\n\r\n    function getDate(date) {\r\n        let d = new Date(date);    \r\n        return d.getFullYear().toString() + \"/\" + (d.getMonth() + 1).toString() + \"/\" + d.getDate();\r\n    }    \r\n\r\n    function onChangeLevel(e) {\r\n        console.log(e.target.value)     \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { posts && leagues && managers ? (                \r\n                <div>                    \r\n                    <Row gutter={16}>\r\n                        <Col sm={24} md={16}>\r\n                            <Typography.Title level={3}>Шинэ нийтлэлүүд:</Typography.Title>\r\n                            <a href={`/posts/${posts[0].id}`}>\r\n                                <Card hoverable style={{ backgroundImage: \"linear-gradient(to right, #43e97b 0%, #38f9d7 100%)\" }}>\r\n                                    <Row gutter={16} style={{ width: '100%' }}>                        \r\n                                        <Col sm={24} md={12}>\r\n                                            <img src={posts[0].thumbnail} alt=\"thumbnail\" style={{ width: '100%', height: 'auto' }} />\r\n                                        </Col>\r\n                                        <Col sm={24} md={12}>\r\n                                            <Typography.Title level={2}>{posts[0].title}</Typography.Title>\r\n                                            <Paragraph ellipsis={ellipsis ? { rows: 4, expandable: false, symbol: 'more' } : false}>                                                \r\n                                                <div dangerouslySetInnerHTML={{__html: posts[0].content }} />\r\n                                            </Paragraph>                                        \r\n                                            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '24px' }}>\r\n                                                <strong>{getDate(posts[0].created_at)}</strong>\r\n                                                <Button type=\"primary\">Дэлгэрэнгүй</Button>\r\n                                            </div>                        \r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </a>\r\n                            <a href={`/posts/${posts[1].id}`}>\r\n                                <Card hoverable style={{ backgroundImage: \"linear-gradient(120deg, #a1c4fd 0%, #c2e9fb 100%)\", marginTop: '16px' }}>\r\n                                    <Row gutter={16} style={{ width: '100%' }}>\r\n                                        <Col sm={24} md={12}>\r\n                                            <Typography.Title level={2}>{posts[1].title}</Typography.Title>\r\n                                            <Paragraph ellipsis={ellipsis ? { rows: 4, expandable: false, symbol: 'more' } : false}>\r\n                                                <div dangerouslySetInnerHTML={{__html: posts[1].content }} />\r\n                                            </Paragraph>\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '24px' }}>\r\n                                                <strong>{getDate(posts[0].created_at)}</strong>\r\n                                                <Button type=\"primary\">Дэлгэрэнгүй</Button>\r\n                                            </div>                        \r\n                                        </Col>\r\n                                        <Col sm={24} md={12}>\r\n                                            <img src={posts[1].thumbnail} alt=\"thumbnail\" style={{ width: '100%', height: 'auto' }} />\r\n                                        </Col>                        \r\n                                    </Row>\r\n                                </Card>\r\n                            </a>\r\n                            <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '16px 0' }}>\r\n                                <Button href=\"/posts\" type=\"primary\">Цааш үзэх</Button>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={24} md={8}>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', paddingBottom: '16px' }}>\r\n                                <Typography.Title level={3}>Лигийн хүснэгт:</Typography.Title>\r\n                                <Radio.Group onChange={onChangeLevel} defaultValue={1}>\r\n                                    <Radio.Button value={1}>Дээд</Radio.Button>\r\n                                    <Radio.Button value={2} disabled>Чэмпионшип</Radio.Button>                            \r\n                                </Radio.Group>\r\n                            </div>\r\n                            <LeagueTableMini id={leagues ? leagues[leagues.length - 1].id : 1} />\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={{ margin: '16px 0' }}>\r\n                        <Typography.Title level={3}>Тойргийн мэргэн буучид</Typography.Title>\r\n                        <Divider style={{ marginTop: '0px', marginBottom: '16px' }} />\r\n                        <Row gutter={16}>\r\n                            <Col sm={24} md={12}>\r\n                                <Card hoverable title=\"Менежер 1 - 57 оноо\" extra=\"Дээд лиг\">\r\n                                    <img src=\"https://resources.premierleague.com/premierleague/photo/2016/08/17/0c337304-1fba-4b00-a1e9-23d417b9367b/Manager-GW1.png\" alt=\"motw\" style={{ width: '100%', height: 'auto' }} />        \r\n                                </Card>                        \r\n                            </Col>\r\n                            <Col sm={24} md={12}>\r\n                                <Card hoverable title=\"Менежер 2 - 55 оноо\" extra=\"Чэмпионшип\">\r\n                                    <img src=\"https://resources.premierleague.com/premierleague/photo/2016/08/23/07a9f156-0b98-4e7e-a5f5-d706539f1022/gw2-totw.png\" alt=\"motw\" style={{ width: '100%', height: 'auto' }} />        \r\n                                </Card>                        \r\n                            </Col>\r\n                        </Row>         \r\n                    </div>\r\n                    <div style={{ margin: '16px 0' }}>\r\n                        <Typography.Title level={3}>Тойргийн өндөр оноонууд</Typography.Title>\r\n                        <Divider style={{ marginTop: '0px', marginBottom: '16px' }} />\r\n                        <List\r\n                            grid={{\r\n                                gutter: 16,\r\n                                xs: 1,\r\n                                sm: 2,\r\n                                md: 3,\r\n                                lg: 4,\r\n                                xl: 5,\r\n                                xxl: 5,\r\n                            }}\r\n                            dataSource={getLastWeekTopScorers()}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <a href={`/managers/${item.manager.id}`}>\r\n                                        <Card hoverable title={item.manager.name} extra={<Avatar shape=\"square\" src={item.manager.image} />}>\r\n                                            <Typography.Title level={2}>\r\n                                                <CountUp start={0} end={item.score} delay={3} duration={3} />                                                \r\n                                            </Typography.Title>\r\n                                        </Card>\r\n                                    </a>\r\n                                </List.Item>\r\n                            )}\r\n                        />                \r\n                    </div>            \r\n                    <div style={{ margin: '16px 0' }}>\r\n                        <Typography.Title level={3}>Лигийг хожлоор тэргүүлэгчид</Typography.Title>\r\n                        <Divider style={{ marginTop: '0px', marginBottom: '16px' }} />\r\n                        <List\r\n                            grid={{\r\n                                gutter: 16,\r\n                                xs: 1,\r\n                                sm: 2,\r\n                                md: 3,\r\n                                lg: 4,\r\n                                xl: 5,\r\n                                xxl: 5,\r\n                            }}\r\n                            dataSource={getSeasonTopWinners()}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <a href={`/managers/${item.manager.id}`}>\r\n                                        <Card hoverable title={item.manager.name} extra={<Avatar shape=\"square\" src={item.manager.image} />}>\r\n                                            <Typography.Title level={2}>\r\n                                                <CountUp start={0} end={item.wins} delay={5} duration={3} />  \r\n                                            </Typography.Title>\r\n                                        </Card>\r\n                                    </a>\r\n                                </List.Item>\r\n                            )}\r\n                        />                \r\n                    </div>\r\n                    <div style={{ margin: '16px 0' }}>\r\n                        <Typography.Title level={3}>Лигийг оноогоор тэргүүлэгчид</Typography.Title>\r\n                        <Divider style={{ marginTop: '0px', marginBottom: '16px' }} />\r\n                        <List\r\n                            grid={{\r\n                                gutter: 16,\r\n                                xs: 1,\r\n                                sm: 2,\r\n                                md: 3,\r\n                                lg: 4,\r\n                                xl: 5,\r\n                                xxl: 5,\r\n                            }}\r\n                            dataSource={getSeasonTopScorers()}\r\n                            renderItem={item => (\r\n                                <List.Item>\r\n                                    <a href={`/managers/${item.manager.id}`}>\r\n                                        <Card hoverable title={item.manager.name} extra={<Avatar shape=\"square\" src={item.manager.image} />}>\r\n                                            <Typography.Title level={2}>\r\n                                                <CountUp start={0} end={item.score} delay={7} duration={3} />  \r\n                                            </Typography.Title>\r\n                                        </Card>\r\n                                    </a>\r\n                                </List.Item>\r\n                            )}\r\n                        />                \r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            ) }                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Profile.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Login.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Signup.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\ProfileEdit.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\user\\Logout.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemDetail.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemList.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemUpdate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\item\\ItemCreate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\SeasonList.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\Season19.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\season\\SeasonCreate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsMatch.js",["192","193","194","195","196","197","198"],"import { Breadcrumb, Card, Col, Row, Avatar, Radio, Spin, Table } from \"antd\"\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { FrownFilled, FrownOutlined, MehOutlined, MinusOutlined, PieChartOutlined, PlusOutlined, ProjectOutlined, StarFilled } from '@ant-design/icons';\r\nimport StatsTable from './StatsTable';\r\n\r\nfunction StatsMatch (props) {\r\n\r\n    const [matches, setMatches] = useState()  \r\n    const [managers, setManagers] = useState();        \r\n    const [level, setLevel] = useState(0)\r\n    const [leagues, setLeagues] = useState()\r\n    const [loading, setLoading] = useState()\r\n    const [singleScoreHigh, setSingleScoreHigh] = useState()\r\n    const [singleScoreLow, setSingleScoreLow] = useState()\r\n\r\n    useEffect(() => {     \r\n        setLoading(true)         \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.matches}`\r\n        }).then(res => {              \r\n            setMatches(res.data)                 \r\n            orderBySingleScore(res.data, 20)\r\n            setLoading(false)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });              \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {                   \r\n            setLeagues(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n        setLoading(false)\r\n    }, []);    \r\n\r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    function orderBySingleScore(list, size) {\r\n        let high = []  \r\n        list.forEach(match => {\r\n            let home = {\r\n                team: match.home_team,\r\n                score: match.home_score\r\n            }\r\n            high.push(home)\r\n            let away = {\r\n                team: match.away_team,\r\n                score: match.away_score\r\n            }            \r\n            high.push(away)\r\n        })                \r\n        high = high.sort((a, b) => b.score - a.score)       \r\n        for (let i = 0; i < high.length; i++) {\r\n            high[i].rank = i+1\r\n        }        \r\n        setSingleScoreHigh(high.slice(0, size))     \r\n        let low = []\r\n        for (let i = high.length - size; i < high.length; i++) {\r\n            let item = {\r\n                team: high[i].team,\r\n                score: high[i].score,\r\n                rank: high.length - i\r\n            }\r\n            low.push(item)\r\n        }\r\n        setSingleScoreLow(low.reverse())                \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Байр',\r\n            dataIndex: 'rank',\r\n        },\r\n        {\r\n            title: 'Баг',\r\n            dataIndex: 'team',        \r\n            render: item => <img src={item.image} alt=\"teamlogo\" style={{ width: 'auto', height: '24px' }} />\r\n        },    \r\n        {\r\n            title: 'Менежер',\r\n            dataIndex: 'team',        \r\n            render: item => \r\n            <a href={`/managers/${item.id}`}>                        \r\n                {` ${item.name}`}\r\n            </a>     \r\n        },\r\n        {\r\n            title: 'Тоо',\r\n            dataIndex: 'score',        \r\n            render: item => <div style={{ textAlign: 'right' }}>{item}</div>\r\n        },\r\n    ];\r\n\r\n    function getAverageMatchScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScoreAway(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchPoints(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchWinRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchDrawRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchLossRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n                count += career.total_match\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n                count = career.total_match\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function orderByAverageMatchPoints(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getAverageMatchPoints(b, level) - getAverageMatchPoints(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getAverageMatchPoints(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByAverageMatchScore(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getAverageMatchScore(b, level) - getAverageMatchScore(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getAverageMatchScore(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByAverageMatchScoreAway(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getAverageMatchScoreAway(b, level) - getAverageMatchScoreAway(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getAverageMatchScoreAway(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByMatchWinRate(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getMatchWinRate(b, level) - getMatchWinRate(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: `${getMatchWinRate(sorted[i], level)}%`\r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByMatchDrawRate(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getMatchDrawRate(b, level) - getMatchDrawRate(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getMatchDrawRate(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByMatchLossRate(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getMatchLossRate(b, level) - getMatchLossRate(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getMatchLossRate(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"/\">Нүүр хуудас</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"/stats\">Статистик</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Тоглолт\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>      \r\n            { loading ?\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n                    <Spin />\r\n                </div>\r\n            : matches && managers ? \r\n                <div>\r\n                    {/* <div style={{ margin: '16px 0' }}>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={level}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>                                        \r\n                        </Radio.Group>\r\n                    </div>     */}\r\n                    <Row gutter={16}>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>\r\n                            <Card title=\"Хамгийн их оноо\" size=\"small\" extra={<Avatar shape=\"square\" icon={<StarFilled style={{ color: 'yellow' }} />} />}>\r\n                                <Table columns={columns} dataSource={singleScoreHigh ? singleScoreHigh : undefined} size=\"small\" pagination={{ pageSize: 20 }} showHeader={false} />\r\n                            </Card>                        \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>\r\n                            <Card title=\"Хамгийн бага оноо\" size=\"small\" extra={<Avatar shape=\"square\" icon={<FrownOutlined style={{ color: 'black' }} />} />}>\r\n                                <Table columns={columns} dataSource={singleScoreLow ? singleScoreLow : undefined} size=\"small\" pagination={{ pageSize: 20 }} showHeader={false} />\r\n                            </Card>                        \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Хожлийн хувь\" size=\"small\" extra={<Avatar shape=\"square\" icon={<PieChartOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByMatchWinRate(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>\r\n                            <Card title=\"Дундаж оноо\" size=\"small\" extra={<Avatar shape=\"square\" icon={<ProjectOutlined style={{ color: 'black' }} />} />}>\r\n                                <StatsTable data={orderByAverageMatchPoints(managers, 20)} />\r\n                            </Card>                        \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Дундаж + (Тоглолт)\" size=\"small\" extra={<Avatar shape=\"square\" icon={<PlusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByAverageMatchScore(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Дундаж - (Тоглолт)\" size=\"small\" extra={<Avatar shape=\"square\" icon={<MinusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByAverageMatchScoreAway(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsMatch","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsSeason.js",["199","200","201","202","203"],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsList.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import { DislikeOutlined, FrownOutlined, LikeOutlined, MehOutlined, MinusOutlined, PlusOutlined, PushpinOutlined, SmileOutlined, StarFilled, TrophyFilled, TrophyOutlined } from '@ant-design/icons';\r\nimport { Breadcrumb, Button, Card, Col, Radio, Row, Spin } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport StatsTable from './StatsTable';\r\n\r\nconst StatsList = (props) => {\r\n\r\n    const [managers, setManagers] = useState();        \r\n    const [level, setLevel] = useState(0);\r\n    const [leagues, setLeagues] = useState();    \r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {                   \r\n            setLeagues(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, []);    \r\n    \r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers && leagues ? (\r\n                <div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/\">Нүүр хуудас</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            Статистик\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>            \r\n                    {/* <div style={{ margin: '16px 0' }}>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={level}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>                                        \r\n                        </Radio.Group>\r\n                    </div>                              */}\r\n                    <Row gutter={16} style={{ margin: '24px 0' }}>\r\n                        <Col span={8} style={{ padding: '0 24px' }}>\r\n                            <Button href=\"/statsleague\" type=\"ghost\" size=\"large\" style={{ fontSize: '32px', width: '100%', height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>Лигийн</Button>\r\n                        </Col>\r\n                        <Col span={8} style={{ padding: '0 24px' }}>\r\n                            <Button href=\"/statsseason\" type=\"ghost\" size=\"large\" style={{ fontSize: '32px', width: '100%', height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>Улирлын</Button>\r\n                        </Col>\r\n                        <Col span={8} style={{ padding: '0 24px' }}>\r\n                            <Button href=\"/statsmatch\" type=\"ghost\" size=\"large\" style={{ fontSize: '32px', width: '100%', height: '200px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>Тоглолтын</Button>\r\n                        </Col>\r\n                    </Row>                                                                         \r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsList;","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\manager\\ManagerList.js",["221"],"import { Badge, Breadcrumb, Card, List, Radio, Select, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { TrophyFilled, TrophyOutlined } from '@ant-design/icons';\r\n\r\nconst ManagerList = (props) => {\r\n     \r\n    const [managers, setManagers] = useState();    \r\n    const [sortType, setSortType] = useState('champ');\r\n    const [level, setLevel] = useState(0);\r\n\r\n    useEffect(getData, [])    \r\n\r\n    function getData() {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(orderByChamp(res.data))\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }\r\n\r\n    function getChampion(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorerAway(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function orderByChamp(data) {\r\n        return data.sort((a, b) => getChampion(b) - getChampion(a))\r\n    }\r\n\r\n    function orderByRunnerup(data) {\r\n        return data.sort((a, b) => getRunnerup(b) - getRunnerup(a))\r\n    }\r\n\r\n    function orderByPoints(data) {\r\n        return data.sort((a, b) => getPoints(b) - getPoints(a))\r\n    }\r\n\r\n    function orderByScore(data) {\r\n        return data.sort((a, b) => getScore(b) - getScore(a))\r\n    }\r\n\r\n    function orderByScoreAway(data) {\r\n        return data.sort((a, b) => getScoreAway(b) - getScoreAway(a))\r\n    }\r\n\r\n    function orderByTopScorer(data) {\r\n        return data.sort((a, b) => getTopScorer(b) - getTopScorer(a))\r\n    }\r\n\r\n    function orderByTopScorerAway(data) {\r\n        return data.sort((a, b) => getTopScorerAway(b) - getTopScorerAway(a))\r\n    }\r\n\r\n    function orderByWin(data) {\r\n        return data.sort((a, b) => getWins(b) - getWins(a))\r\n    }\r\n\r\n    function orderByDraw(data) {\r\n        return data.sort((a, b) => getDraws(b) - getDraws(a))\r\n    }\r\n\r\n    function orderByLoss(data) {\r\n        return data.sort((a, b) => getLosses(b) - getLosses(a))\r\n    }\r\n\r\n    function sortManagers(type) {                   \r\n        switch(type) {\r\n            case \"champ\":                \r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n            case \"runnerup\":                \r\n                setManagers(orderByRunnerup(managers))    \r\n                break;            \r\n            case \"points\": \r\n                setManagers(orderByPoints(managers))\r\n                break;\r\n            case \"score\": \r\n                setManagers(orderByScore(managers))\r\n                break;\r\n            case \"scoreaway\": \r\n                setManagers(orderByScoreAway(managers))\r\n                break;\r\n            case \"win\": \r\n                setManagers(orderByWin(managers))\r\n                break;\r\n            case \"draw\": \r\n                setManagers(orderByDraw(managers))\r\n                break;\r\n            case \"loss\": \r\n                setManagers(orderByLoss(managers))\r\n                break;\r\n            case \"topscorer\": \r\n                setManagers(orderByTopScorer(managers))\r\n                break;\r\n            case \"topscoreraway\": \r\n                setManagers(orderByTopScorerAway(managers))\r\n                break;\r\n            default:\r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n        }  \r\n    }\r\n\r\n    function handleSort(value) {              \r\n        setSortType(value)          \r\n        sortManagers(value)               \r\n    }      \r\n\r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n        setSortType('champ')\r\n        sortManagers('champ')         \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers ? (                                    \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр хуудас</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        Менежер\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <div>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={0}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div>\r\n                        <strong>Эрэмбэлэх: </strong>\r\n                        <Select defaultValue={sortType} style={{ width: 200 }} onChange={handleSort}>\r\n                            <Select.Option value=\"none\">---------</Select.Option>\r\n                            <Select.Option value=\"champ\">Түрүү</Select.Option>\r\n                            <Select.Option value=\"runnerup\">Үзүүр</Select.Option>\r\n                            <Select.Option value=\"points\">Оноо</Select.Option>\r\n                            <Select.Option value=\"score\">Авсан оноо</Select.Option>\r\n                            <Select.Option value=\"scoreaway\">Алдсан оноо</Select.Option>\r\n                            <Select.Option value=\"win\">Хожил</Select.Option>\r\n                            <Select.Option value=\"draw\">Тэнцээ</Select.Option>\r\n                            <Select.Option value=\"loss\">Хожигдол</Select.Option>\r\n                            <Select.Option value=\"topscorer\">Мэргэн бууч</Select.Option>\r\n                            <Select.Option value=\"topscoreraway\">МБ-н эсрэг</Select.Option>\r\n                        </Select>\r\n                    </div>                    \r\n                </div>\r\n                <div style={{ margin: '16px 0' }}>\r\n                    <List\r\n                        grid={{\r\n                            gutter: 16,\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 3,\r\n                            lg: 4,\r\n                            xl: 5,\r\n                            xxl: 6,\r\n                        }}\r\n                        dataSource={managers}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <a href={`/managers/${item.id}`}>\r\n                                <Card \r\n                                    hoverable             \r\n                                    size=\"small\"                                                            \r\n                                    title={\r\n                                        <div>\r\n                                            <Avatar shape=\"square\" size={24} style={{ marginRight: '4px' }} src={<img src={item.image} alt=\"teamlogo\" style={{ height: '100%', width: 'auto' }} />} />\r\n                                            {item.name}\r\n                                        </div>\r\n                                    }\r\n                                    extra={\r\n                                        <div style={{ display: 'flex' }}>\r\n                                            <div style={{ marginRight: '8px' }}>\r\n                                                <Badge count={getChampion(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyFilled style={{ color: 'yellow' }} />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <div>\r\n                                                <Badge count={getRunnerup(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyOutlined />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                >\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Оноо: {getPoints(item)}</p>                                    \r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Авсан: {getScore(item)}</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Хожил: {getWins(item)}</p>                                        \r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Алдсан: {getScoreAway(item)}</p>\r\n                                    </div>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Тэнцээ: {getDraws(item)}</p>\r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Мэргэн бууч: {getTopScorer(item)}</p>                                        \r\n                                    </div>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>Хожигдол: {getLosses(item)}</p>                                                                            \r\n                                        <p style={{ border: '1px solid #cecece', borderRadius: '10px', padding: '4px' }}>МБ-н эсрэг: {getTopScorerAway(item)}</p>\r\n                                    </div>\r\n                                                                    \r\n                                </Card>\r\n                                </a>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerList;","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\manager\\ManagerDetail.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\GameweekUpdate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\DuelCompare.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\Blogs.js",["222"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { Space, Spin, List, Avatar, Typography, Button, Breadcrumb } from 'antd';\r\nimport { EyeOutlined, LikeOutlined, MessageOutlined } from '@ant-design/icons';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nconst IconText = ({ icon, text }) => (\r\n    <Space>\r\n        {React.createElement(icon)}\r\n        {text}\r\n    </Space>\r\n);\r\n\r\nconst Blogs = (props) => {\r\n\r\n    const [posts, setPosts] = useState();\r\n    const [ellipsis, setEllipsis] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.posts}/`\r\n        }).then(res => {\r\n            console.log(res.data)\r\n            setPosts(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            { posts ? (\r\n                <div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <a href=\"/\">Нүүр хуудас</a>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            Нийтлэл\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{ background: '#fff', padding: '8px', margin: '16px 0' }}>\r\n                        <List\r\n                            itemLayout=\"vertical\"\r\n                            size=\"large\"\r\n                            pagination={{\r\n                                pageSize: 3,\r\n                            }}\r\n                            dataSource={posts}\r\n                            renderItem={item => (\r\n                            <List.Item\r\n                                key={item.title}\r\n                                actions={[\r\n                                    <IconText icon={EyeOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\r\n                                    <IconText icon={LikeOutlined} text=\"12\" key=\"list-vertical-like-o\" />,\r\n                                    <IconText icon={MessageOutlined} text=\"5\" key=\"list-vertical-message\" />                            \r\n                                ]}\r\n                                extra={\r\n                                    <a href={`/posts/${posts[1].id}`}>\r\n                                        <img\r\n                                            width={350}\r\n                                            alt=\"logo\"\r\n                                            src={item.thumbnail}\r\n                                        />\r\n                                    </a>\r\n                                }                        \r\n                            >\r\n                                <List.Item.Meta                            \r\n                                    avatar={<Avatar src={item.avatar} />}\r\n                                    title={<a href={`/posts/${item.id}`}>{item.title}</a>}    \r\n                                    description={<span>Нийтлэсэн: {item.created_by.username}</span>}                                                                           \r\n                                />\r\n                                <Paragraph ellipsis={ellipsis ? { rows: 4, expandable: false } : false}>\r\n                                    <div dangerouslySetInnerHTML={{__html: item.content }} />\r\n                                </Paragraph>        \r\n                                <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                    <Button href={`/posts/${posts[1].id}`} type=\"primary\" style={{ justifySelf: 'flex-end' }}>Дэлгэрэнгүй</Button>\r\n                                </div>                        \r\n                            </List.Item>    \r\n                            )}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs;","C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\BlogCreate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\blog\\BlogDetail.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\LeagueTableMini.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\ImageUpload.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\DuelInfo.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\CareerTable.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\LeagueTable.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\components\\GameWeek.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsTable.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\duel\\Duel.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\TractorDraft\\src\\stats\\StatsLeague.js",["223","224","225","226","227"],"import { Breadcrumb, Card, Col, Row, Avatar, Radio, Spin, Table } from \"antd\"\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport { FrownFilled, FrownOutlined, MehOutlined, MinusOutlined, SmileOutlined, PlusOutlined, ProjectOutlined, StarFilled, TrophyFilled, TrophyOutlined, PushpinOutlined, LikeOutlined, DislikeOutlined } from '@ant-design/icons';\r\nimport StatsTable from './StatsTable';\r\n\r\nfunction StatsLeague (props) {\r\n\r\n    const [managers, setManagers] = useState();        \r\n    const [level, setLevel] = useState(0)\r\n    const [leagues, setLeagues] = useState()\r\n    const [loading, setLoading] = useState()    \r\n\r\n    useEffect(() => {     \r\n        setLoading(true)                          \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(res.data)\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {                   \r\n            setLeagues(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n        setLoading(false)\r\n    }, []);    \r\n\r\n    function getChampion(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getThird(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_third\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_third\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getAppearance(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_appearance\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorerAway(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer_away\r\n            }\r\n        }\r\n        return res\r\n    }   \r\n\r\n    function getPoints(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function orderByChamp(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getChampion(b, level) - getChampion(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getChampion(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByRunnerup(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getRunnerup(b, level) - getRunnerup(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getRunnerup(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByThird(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getThird(b, level) - getThird(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getThird(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByAppearance(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getAppearance(b, level) - getAppearance(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getAppearance(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByTopScorer(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getTopScorer(b, level) - getTopScorer(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getTopScorer(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }\r\n\r\n    function orderByTopScorerAway(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getTopScorerAway(b, level) - getTopScorerAway(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getTopScorerAway(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n    \r\n    function orderByPoints(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getPoints(b, level) - getPoints(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getPoints(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }  \r\n\r\n    function orderByScore(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getScore(b, level) - getScore(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getScore(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    }  \r\n\r\n    function orderByScoreAway(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getScoreAway(b, level) - getScoreAway(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getScoreAway(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n    \r\n    function orderByWins(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getWins(b, level) - getWins(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getWins(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n\r\n    function orderByDraws(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getDraws(b, level) - getDraws(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getDraws(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n\r\n    function orderByLosses(data, size) {\r\n        let result = []\r\n        let sorted = data.sort((a, b) => getLosses(b, level) - getLosses(a, level))\r\n        for (let i = 0; i < size; i++) {\r\n            let item = { \r\n                rank: (i + 1),\r\n                manager: sorted[i],\r\n                number: getLosses(sorted[i], level)  \r\n            }\r\n            result.push(item)\r\n        }\r\n        return result\r\n    } \r\n\r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"/\">Нүүр хуудас</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    <a href=\"/stats\">Статистик</a>\r\n                </Breadcrumb.Item>\r\n                <Breadcrumb.Item>\r\n                    Тоглолт\r\n                </Breadcrumb.Item>\r\n            </Breadcrumb>      \r\n            { loading ?\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n                    <Spin />\r\n                </div>\r\n            : managers && leagues ? \r\n                <div>                    \r\n                    <Row gutter={16}>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>\r\n                            <Card title=\"Түрүү\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyFilled style={{ color: 'yellow' }} />} />}>\r\n                                <StatsTable data={orderByChamp(managers, 20)} />\r\n                            </Card>                        \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>\r\n                            <Card title=\"Үзүүр\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyOutlined />} />}>\r\n                                <StatsTable data={orderByRunnerup(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"3-р байр\" size=\"small\" extra={<Avatar shape=\"square\" icon={<TrophyFilled style={{ color: '#cd7f32' }} />} />}>\r\n                                <StatsTable data={orderByThird(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Оролцсон\" size=\"small\" extra={<Avatar shape=\"square\" icon={<PushpinOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByAppearance(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Мэргэн бууч\" size=\"small\" extra={<Avatar shape=\"square\" icon={<LikeOutlined style={{ color: '#000' }} />} />}>                                \r\n                                <StatsTable data={orderByTopScorer(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"МБ-тай таарсан\" size=\"small\" extra={<Avatar shape=\"square\" icon={<DislikeOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByTopScorerAway(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Оноо\" size=\"small\" extra={<Avatar shape=\"square\" icon={<StarFilled style={{ color: 'yellow' }} />} />}>\r\n                                <StatsTable data={orderByPoints(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Авсан\" size=\"small\" extra={<Avatar shape=\"square\" icon={<PlusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByScore(managers, 20)} />\r\n                            </Card> \r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Алдсан\" size=\"small\" extra={<Avatar shape=\"square\" icon={<MinusOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByScoreAway(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Хожил\" size=\"small\" extra={<Avatar shape=\"square\" icon={<SmileOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByWins(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Тэнцээ\" size=\"small\" extra={<Avatar shape=\"square\" icon={<MehOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByDraws(managers, 20)} />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={24} sm={12} md={8} style={{ padding: '8px' }}>                                \r\n                            <Card title=\"Хожигдол\" size=\"small\" extra={<Avatar shape=\"square\" icon={<FrownOutlined style={{ color: '#000' }} />} />}>\r\n                                <StatsTable data={orderByLosses(managers, 20)} />\r\n                            </Card>\r\n                        </Col>    \r\n                    </Row>\r\n                </div>\r\n            : <></>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsLeague",{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":11,"column":22,"nodeType":"234","messageId":"235","endLine":11,"endColumn":33},{"ruleId":"232","severity":1,"message":"236","line":1,"column":46,"nodeType":"234","messageId":"235","endLine":1,"endColumn":51},{"ruleId":"232","severity":1,"message":"237","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":21},{"ruleId":"232","severity":1,"message":"238","line":5,"column":38,"nodeType":"234","messageId":"235","endLine":5,"endColumn":49},{"ruleId":"232","severity":1,"message":"239","line":13,"column":12,"nodeType":"234","messageId":"235","endLine":13,"endColumn":19},{"ruleId":"232","severity":1,"message":"240","line":49,"column":14,"nodeType":"234","messageId":"235","endLine":49,"endColumn":27},{"ruleId":"232","severity":1,"message":"241","line":297,"column":14,"nodeType":"234","messageId":"235","endLine":297,"endColumn":34},{"ruleId":"232","severity":1,"message":"242","line":311,"column":14,"nodeType":"234","messageId":"235","endLine":311,"endColumn":34},{"ruleId":"232","severity":1,"message":"236","line":1,"column":46,"nodeType":"234","messageId":"235","endLine":1,"endColumn":51},{"ruleId":"232","severity":1,"message":"243","line":1,"column":59,"nodeType":"234","messageId":"235","endLine":1,"endColumn":64},{"ruleId":"232","severity":1,"message":"237","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":21},{"ruleId":"232","severity":1,"message":"244","line":5,"column":95,"nodeType":"234","messageId":"235","endLine":5,"endColumn":110},{"ruleId":"232","severity":1,"message":"240","line":85,"column":14,"nodeType":"234","messageId":"235","endLine":85,"endColumn":27},{"ruleId":"232","severity":1,"message":"245","line":1,"column":10,"nodeType":"234","messageId":"235","endLine":1,"endColumn":25},{"ruleId":"232","severity":1,"message":"246","line":1,"column":27,"nodeType":"234","messageId":"235","endLine":1,"endColumn":40},{"ruleId":"232","severity":1,"message":"247","line":1,"column":42,"nodeType":"234","messageId":"235","endLine":1,"endColumn":54},{"ruleId":"232","severity":1,"message":"238","line":1,"column":56,"nodeType":"234","messageId":"235","endLine":1,"endColumn":67},{"ruleId":"232","severity":1,"message":"248","line":1,"column":69,"nodeType":"234","messageId":"235","endLine":1,"endColumn":82},{"ruleId":"232","severity":1,"message":"249","line":1,"column":84,"nodeType":"234","messageId":"235","endLine":1,"endColumn":96},{"ruleId":"232","severity":1,"message":"250","line":1,"column":98,"nodeType":"234","messageId":"235","endLine":1,"endColumn":113},{"ruleId":"232","severity":1,"message":"251","line":1,"column":115,"nodeType":"234","messageId":"235","endLine":1,"endColumn":128},{"ruleId":"232","severity":1,"message":"252","line":1,"column":130,"nodeType":"234","messageId":"235","endLine":1,"endColumn":140},{"ruleId":"232","severity":1,"message":"253","line":1,"column":142,"nodeType":"234","messageId":"235","endLine":1,"endColumn":154},{"ruleId":"232","severity":1,"message":"254","line":1,"column":156,"nodeType":"234","messageId":"235","endLine":1,"endColumn":170},{"ruleId":"232","severity":1,"message":"255","line":2,"column":30,"nodeType":"234","messageId":"235","endLine":2,"endColumn":34},{"ruleId":"232","severity":1,"message":"236","line":2,"column":41,"nodeType":"234","messageId":"235","endLine":2,"endColumn":46},{"ruleId":"232","severity":1,"message":"256","line":3,"column":8,"nodeType":"234","messageId":"235","endLine":3,"endColumn":14},{"ruleId":"232","severity":1,"message":"257","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":18},{"ruleId":"232","severity":1,"message":"258","line":12,"column":12,"nodeType":"234","messageId":"235","endLine":12,"endColumn":17},{"ruleId":"232","severity":1,"message":"240","line":34,"column":14,"nodeType":"234","messageId":"235","endLine":34,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":14,"column":24,"nodeType":"261","endLine":14,"endColumn":26,"suggestions":"262"},{"ruleId":"232","severity":1,"message":"233","line":19,"column":22,"nodeType":"234","messageId":"235","endLine":19,"endColumn":33},{"ruleId":"232","severity":1,"message":"236","line":1,"column":46,"nodeType":"234","messageId":"235","endLine":1,"endColumn":51},{"ruleId":"232","severity":1,"message":"243","line":1,"column":59,"nodeType":"234","messageId":"235","endLine":1,"endColumn":64},{"ruleId":"232","severity":1,"message":"237","line":5,"column":10,"nodeType":"234","messageId":"235","endLine":5,"endColumn":21},{"ruleId":"232","severity":1,"message":"244","line":5,"column":95,"nodeType":"234","messageId":"235","endLine":5,"endColumn":110},{"ruleId":"232","severity":1,"message":"240","line":384,"column":14,"nodeType":"234","messageId":"235","endLine":384,"endColumn":27},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'setEllipsis' is assigned a value but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'FrownFilled' is defined but never used.","'MehOutlined' is defined but never used.","'leagues' is assigned a value but never used.","'onChangeLevel' is defined but never used.","'orderByMatchDrawRate' is defined but never used.","'orderByMatchLossRate' is defined but never used.","'Table' is defined but never used.","'ProjectOutlined' is defined but never used.","'DislikeOutlined' is defined but never used.","'FrownOutlined' is defined but never used.","'LikeOutlined' is defined but never used.","'MinusOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'PushpinOutlined' is defined but never used.","'SmileOutlined' is defined but never used.","'StarFilled' is defined but never used.","'TrophyFilled' is defined but never used.","'TrophyOutlined' is defined but never used.","'Card' is defined but never used.","'Avatar' is defined but never used.","'StatsTable' is defined but never used.","'level' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orderByChamp'. Either include it or remove the dependency array.","ArrayExpression",["265"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},"Update the dependencies array to be: [orderByChamp]",{"range":"268","text":"269"},[518,520],"[orderByChamp]"]