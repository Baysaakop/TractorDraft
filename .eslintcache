[{"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\index.js":"1","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\App.js":"2","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\reducers\\auth.js":"4","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\routes.js":"5","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\actions\\auth.js":"6","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\actions\\actionTypes.js":"7","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\utility.js":"8","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Profile.js":"9","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Login.js":"10","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Signup.js":"11","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\api.js":"12","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\components\\ImageUpload.js":"13","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\ProfileEdit.js":"14","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\index.js":"15","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\reportWebVitals.js":"16","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\App.js":"17","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\reducers\\auth.js":"18","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\routes.js":"19","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\actions\\auth.js":"20","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\actions\\actionTypes.js":"21","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\utility.js":"22","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\api.js":"23","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Signup.js":"24","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Login.js":"25","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Profile.js":"26","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\ProfileEdit.js":"27","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\components\\ImageUpload.js":"28","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Home.js":"29","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemCreate.js":"30","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemUpdate.js":"31","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemList.js":"32","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemDetail.js":"33","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Layout.js":"34","C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Menu.js":"35","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Layout.js":"36","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Home.js":"37","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Menu.js":"38","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemList.js":"39","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemDetail.js":"40","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemCreate.js":"41","C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemUpdate.js":"42","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\index.js":"43","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\reportWebVitals.js":"44","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\App.js":"45","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\reducers\\auth.js":"46","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\routes.js":"47","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Layout.js":"48","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\actions\\auth.js":"49","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\actions\\actionTypes.js":"50","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\utility.js":"51","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Home.js":"52","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Menu.js":"53","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Signup.js":"54","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\api.js":"55","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemDetail.js":"56","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\ProfileEdit.js":"57","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Login.js":"58","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemList.js":"59","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemCreate.js":"60","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemUpdate.js":"61","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Profile.js":"62","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\manager\\ManagerDetail.js":"63","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\season\\Season19.js":"64","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\season\\SeasonList.js":"65","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\manager\\ManagerList.js":"66","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\stats\\StatsList.js":"67","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\DuelCompare.js":"68","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\ImageUpload.js":"69","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\LeagueTable.js":"70","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\DuelInfo.js":"71","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\GameWeek.js":"72","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\CareerTable.js":"73","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\stats\\StatsTable.js":"74","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\Duel.js":"75"},{"size":911,"mtime":1608447804893,"results":"76","hashOfConfig":"77"},{"size":1039,"mtime":1608447804893,"results":"78","hashOfConfig":"77"},{"size":375,"mtime":1607849138575,"results":"79","hashOfConfig":"77"},{"size":1409,"mtime":1608050072932,"results":"80","hashOfConfig":"77"},{"size":1231,"mtime":1608447804899,"results":"81","hashOfConfig":"77"},{"size":4106,"mtime":1607862778490,"results":"82","hashOfConfig":"77"},{"size":211,"mtime":1608049696929,"results":"83","hashOfConfig":"77"},{"size":140,"mtime":1607849138578,"results":"84","hashOfConfig":"77"},{"size":2295,"mtime":1608447804900,"results":"85","hashOfConfig":"77"},{"size":4152,"mtime":1609990219215,"results":"86","hashOfConfig":"77"},{"size":6172,"mtime":1609990235927,"results":"87","hashOfConfig":"77"},{"size":413,"mtime":1607863931282,"results":"88","hashOfConfig":"77"},{"size":1904,"mtime":1607849998798,"results":"89","hashOfConfig":"77"},{"size":7684,"mtime":1608447804901,"results":"90","hashOfConfig":"77"},{"size":911,"mtime":1608175825522,"results":"91","hashOfConfig":"92"},{"size":375,"mtime":1608097158070,"results":"93","hashOfConfig":"92"},{"size":1039,"mtime":1608176175797,"results":"94","hashOfConfig":"92"},{"size":1409,"mtime":1608097158073,"results":"95","hashOfConfig":"92"},{"size":1231,"mtime":1608103600193,"results":"96","hashOfConfig":"92"},{"size":4106,"mtime":1608097158073,"results":"97","hashOfConfig":"92"},{"size":211,"mtime":1608097158071,"results":"98","hashOfConfig":"92"},{"size":140,"mtime":1608097158074,"results":"99","hashOfConfig":"92"},{"size":413,"mtime":1608097158061,"results":"100","hashOfConfig":"92"},{"size":6194,"mtime":1608176194502,"results":"101","hashOfConfig":"92"},{"size":4174,"mtime":1608176185275,"results":"102","hashOfConfig":"92"},{"size":2295,"mtime":1608176201298,"results":"103","hashOfConfig":"92"},{"size":7684,"mtime":1608176210504,"results":"104","hashOfConfig":"92"},{"size":1904,"mtime":1608097158063,"results":"105","hashOfConfig":"92"},{"size":2148,"mtime":1608188215234,"results":"106","hashOfConfig":"92"},{"size":4701,"mtime":1608176242799,"results":"107","hashOfConfig":"92"},{"size":7250,"mtime":1608176221681,"results":"108","hashOfConfig":"92"},{"size":2944,"mtime":1608193093922,"results":"109","hashOfConfig":"92"},{"size":1736,"mtime":1608176235789,"results":"110","hashOfConfig":"92"},{"size":3467,"mtime":1608193046038,"results":"111","hashOfConfig":"92"},{"size":5979,"mtime":1608191045708,"results":"112","hashOfConfig":"92"},{"size":3993,"mtime":1609990227888,"results":"113","hashOfConfig":"77"},{"size":2323,"mtime":1608467770759,"results":"114","hashOfConfig":"77"},{"size":6280,"mtime":1608830850503,"results":"115","hashOfConfig":"77"},{"size":2944,"mtime":1608447804895,"results":"116","hashOfConfig":"77"},{"size":1736,"mtime":1608447804894,"results":"117","hashOfConfig":"77"},{"size":4701,"mtime":1608447804894,"results":"118","hashOfConfig":"77"},{"size":7250,"mtime":1608447804895,"results":"119","hashOfConfig":"77"},{"size":911,"mtime":1612402869483,"results":"120","hashOfConfig":"121"},{"size":375,"mtime":1612402869485,"results":"122","hashOfConfig":"121"},{"size":1039,"mtime":1612402869480,"results":"123","hashOfConfig":"121"},{"size":1409,"mtime":1612402869487,"results":"124","hashOfConfig":"121"},{"size":1962,"mtime":1612402869485,"results":"125","hashOfConfig":"121"},{"size":3993,"mtime":1612402869484,"results":"126","hashOfConfig":"121"},{"size":4106,"mtime":1612402869486,"results":"127","hashOfConfig":"121"},{"size":211,"mtime":1612402869486,"results":"128","hashOfConfig":"121"},{"size":140,"mtime":1612402869487,"results":"129","hashOfConfig":"121"},{"size":319,"mtime":1612402869484,"results":"130","hashOfConfig":"121"},{"size":5516,"mtime":1612402869484,"results":"131","hashOfConfig":"121"},{"size":6172,"mtime":1612402869487,"results":"132","hashOfConfig":"121"},{"size":900,"mtime":1612409300987,"results":"133","hashOfConfig":"121"},{"size":1736,"mtime":1612402869483,"results":"134","hashOfConfig":"121"},{"size":7684,"mtime":1612402869487,"results":"135","hashOfConfig":"121"},{"size":4152,"mtime":1612402869487,"results":"136","hashOfConfig":"121"},{"size":2944,"mtime":1612402869484,"results":"137","hashOfConfig":"121"},{"size":4701,"mtime":1612402869483,"results":"138","hashOfConfig":"121"},{"size":7250,"mtime":1612402869484,"results":"139","hashOfConfig":"121"},{"size":2295,"mtime":1612402869487,"results":"140","hashOfConfig":"121"},{"size":29893,"mtime":1612402869485,"results":"141","hashOfConfig":"121"},{"size":5138,"mtime":1612402869485,"results":"142","hashOfConfig":"121"},{"size":3708,"mtime":1612402869485,"results":"143","hashOfConfig":"121"},{"size":11598,"mtime":1612402869485,"results":"144","hashOfConfig":"121"},{"size":17886,"mtime":1612402869486,"results":"145","hashOfConfig":"121"},{"size":21966,"mtime":1612402869482,"results":"146","hashOfConfig":"121"},{"size":1904,"mtime":1612402869482,"results":"147","hashOfConfig":"121"},{"size":3773,"mtime":1612402869482,"results":"148","hashOfConfig":"121"},{"size":3333,"mtime":1612402869482,"results":"149","hashOfConfig":"121"},{"size":6628,"mtime":1612402869481,"results":"150","hashOfConfig":"121"},{"size":1916,"mtime":1612402869480,"results":"151","hashOfConfig":"121"},{"size":1430,"mtime":1612402869486,"results":"152","hashOfConfig":"121"},{"size":5826,"mtime":1612402869482,"results":"153","hashOfConfig":"121"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"y0th72",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"zn3zbr",{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},"med7gp",{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"242"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"242"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\index.js",[],["309","310"],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\App.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\reducers\\auth.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\routes.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\actions\\auth.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\store\\utility.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Profile.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Login.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\Signup.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\api.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\components\\ImageUpload.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\user\\ProfileEdit.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\index.js",[],["311","312"],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\App.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\reducers\\auth.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\routes.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\actions\\auth.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\store\\utility.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\api.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Signup.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Login.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\Profile.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\user\\ProfileEdit.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\components\\ImageUpload.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Home.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemCreate.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemUpdate.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemList.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\item\\ItemDetail.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Layout.js",[],"C:\\Users\\baysa\\Documents\\github\\Django-React\\frontend\\src\\layout\\Menu.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Layout.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Home.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\layout\\Menu.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemList.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemDetail.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemCreate.js",[],"C:\\Users\\baysa\\Documents\\GitHub\\Django-React\\frontend\\src\\item\\ItemUpdate.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\index.js",[],["313","314"],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\reportWebVitals.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\App.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\reducers\\auth.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\routes.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Layout.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\actions\\auth.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\actions\\actionTypes.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\store\\utility.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Home.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\layout\\Menu.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Signup.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\api.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemDetail.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\ProfileEdit.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Login.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemList.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemCreate.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\item\\ItemUpdate.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\user\\Profile.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\manager\\ManagerDetail.js",["315"],"import { Breadcrumb, Spin, Avatar, Typography, Row, Col, Statistic, Radio } from 'antd';\r\nimport { FlagOutlined, FrownOutlined, MehOutlined, MinusOutlined, PlusOutlined, ProjectOutlined, SmileOutlined, TrophyOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport CareerTable from '../components/CareerTable';\r\nimport DuelInfo from '../duel/DuelInfo';\r\n\r\nconst ManagerDetail = (props) => {\r\n\r\n    const [manager, setManager] = useState();    \r\n    const [level, setLevel] = useState(0);\r\n    const [leagues, setLeagues] = useState();    \r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.itemID;\r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}/${id}`\r\n        }).then(res => {            \r\n            console.log(manager)             \r\n            setManager(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.leagues}`\r\n        }).then(res => {                   \r\n            setLeagues(res.data)                 \r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });    \r\n    }, [props.match])        \r\n\r\n    function getChampion(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getThird(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_third\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_third\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getTopScorer(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getVanga(manager, level) {        \r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_vanga\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_vanga\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager, level) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getAverageScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageScoreAway(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAveragePoints(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageTopScorer(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageWins(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageDraws(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageLosses(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / count\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScore(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchScoreAway() {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getAverageMatchPoints(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9)\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchTopScorerRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_topscorer\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_topscorer\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchWinRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchDrawRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getMatchLossRate(manager, level) {\r\n        let res = 0\r\n        let count = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n                count += career.total_appearance\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n                count = career.total_appearance\r\n            }\r\n        }\r\n        if (count === 0) {\r\n            return 0\r\n        }\r\n        res = res / (count * 9) * 100\r\n        return res.toFixed(1)\r\n    }\r\n\r\n    function getTeamScoreAway(league, manager) {\r\n        let res = 0\r\n        league.gameweeks.forEach(week => {\r\n            week.matches.forEach(match => {\r\n                if (match.home_team.id === manager.id) {\r\n                    res += match.away_score\r\n                } else if (match.away_team.id === manager.id) {\r\n                    res += match.home_score\r\n                }\r\n            })\r\n        })\r\n        return res\r\n    }\r\n\r\n    function getTeams() {\r\n        let teams = []\r\n        let list = level === 0 ? leagues : leagues.filter(x => x.level === level)\r\n        list.forEach(league => {\r\n            let team = league.table.teams.find(x => x.manager.id === manager.id)      \r\n            if (team) { \r\n                let data = {\r\n                    id: team.id,\r\n                    name: team.name,\r\n                    rank: team.rank,\r\n                    points: team.points,\r\n                    score: team.score,\r\n                    score_away: getTeamScoreAway(league, team.manager),\r\n                    wins: team.wins,\r\n                    draws: team.draws,\r\n                    losses: team.losses,\r\n                    year: league.year,\r\n                    number: league.number\r\n                }     \r\n                if (league.level === 1) {\r\n                    data.level = \"Дээд\"\r\n                } else if (league.level === 2) {\r\n                    data.level = \"Чэмпионшип\"\r\n                }\r\n                teams.push(data)\r\n            }            \r\n        });\r\n        return teams;\r\n    }\r\n\r\n    function onChangeLevel(e) {        \r\n        setLevel(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { manager && leagues ? (            \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/managers\">Менежер</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        {manager.name}\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0', padding: '16px', backgroundColor: '#fff' }}>    \r\n                    <Row gutter={[16, 16]}>\r\n                        <Col xs={24} sm={12} style={{ textAlign: 'end' }}>                            \r\n                            <Avatar shape=\"square\" size={180} src={<img src={manager.image} alt=\"teamlogo\" style={{ height: '100%', width: 'auto' }} />} />                    \r\n                        </Col>\r\n                        <Col xs={24} sm={12}>\r\n                            {/* <Typography.Title level={3} style={{ margin: 0 }}>Менежер</Typography.Title>      */}\r\n                            <Typography.Title level={2} style={{ margin: 0 }}>{manager.name}</Typography.Title>                           \r\n                            <Typography.Title level={5} style={{ marginBottom: 0 }}>Түрүү - {getChampion(manager, level)}</Typography.Title>\r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Үзүүр - {getRunnerup(manager, level)}</Typography.Title>          \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>3-р байр - {getThird(manager, level)}</Typography.Title>                     \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Мэргэн бууч - {getTopScorer(manager, level)}</Typography.Title>     \r\n                            <Typography.Title level={5} style={{ margin: 0 }}>Ванга - {getVanga(manager, level)}</Typography.Title>                                \r\n                        </Col>                    \r\n                    </Row>           \r\n                    <div style={{ margin: '16px' }}>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={level}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <Row gutter={16} style={{ margin: '8px' }}>\r\n                        <Col xs={24} sm={24} md={12}>\r\n                            <Row>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <TrophyOutlined style={{ fontSize: '24px' }} />   \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <PlusOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <MinusOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <ProjectOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>                                                \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Түрүү\" value={getChampion(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт +\" value={getScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт -\" value={getScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Нийт оноо\" value={getPoints(manager, level)} />  \r\n                                </Col>                                   \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дэд байр\" value={getRunnerup(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"+ (1 Лигт)\" value={getAverageScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"- (1 Лигт)\" value={getAverageScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Оноо (1 Лигт)\" value={getAveragePoints(manager, level)} />  \r\n                                </Col>                        \r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Гутгаар байр\" value={getThird(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"+ (1 тоглолтод)\" value={getAverageMatchScore(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"- (1 тоглолтод)\" value={getAverageMatchScoreAway(manager, level)} />\r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>                                                \r\n                                    <Statistic title=\"Оноо (1 тоглолтод)\" value={getAverageMatchPoints(manager, level)} />  \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={12}>\r\n                            <Row>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <FlagOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <SmileOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <MehOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ border: '1px solid #f1f1f1', display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '16px' }}>\r\n                                    <FrownOutlined style={{ fontSize: '24px' }} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Мэргэн бууч\" value={getTopScorer(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт хожил\" value={getWins(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт тэнцээ\" value={getDraws(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Нийт хожигдол\" value={getLosses(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж МБ\" value={getAverageTopScorer(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж хожил\" value={getAverageWins(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж тэнцээ\" value={getAverageDraws(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Дундаж хожигдол\" value={getAverageLosses(manager, level)} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"МБ хувь\" value={`${getMatchTopScorerRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Хожлын хувь\" value={`${getMatchWinRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Тэнцээний хувь\" value={`${getMatchDrawRate(manager, level)}%`} />    \r\n                                </Col>\r\n                                <Col span={6} style={{ textAlign: 'center', border: '1px solid #f1f1f1' }}>\r\n                                    <Statistic title=\"Хожигдлын хувь\" value={`${getMatchLossRate(manager, level)}%`} />    \r\n                                </Col>\r\n                            </Row>\r\n                        </Col>                                                  \r\n                    </Row>                   \r\n                    <div style={{ margin: '16px' }}>\r\n                        <Typography.Title level={4}>Түүх</Typography.Title>\r\n                        <CareerTable data={getTeams()} />\r\n                    </div>\r\n                    <div style={{ margin: '16px' }}>\r\n                        <Typography.Title level={4}>Өрсөлдөгчид</Typography.Title>\r\n                        <DuelInfo manager={manager} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerDetail;","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\season\\Season19.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\season\\SeasonList.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\manager\\ManagerList.js",["316"],"import { Badge, Breadcrumb, Card, List, Radio, Select, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from '../api';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport { TrophyFilled, TrophyOutlined } from '@ant-design/icons';\r\n\r\nconst ManagerList = (props) => {\r\n     \r\n    const [managers, setManagers] = useState();    \r\n    const [sortType, setSortType] = useState('champ');\r\n    const [level, setLevel] = useState(0);\r\n\r\n    useEffect(() => {      \r\n        axios({\r\n            method: 'GET',\r\n            url: `${api.managers}`\r\n        }).then(res => {                                            \r\n            setManagers(orderByChamp(res.data))\r\n        }).catch(err => {\r\n            console.log(err.message)\r\n        });                      \r\n    }, []);    \r\n\r\n    function getChampion(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_champion\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_champion\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getRunnerup(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_runnerup\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_runnerup\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getPoints(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_point\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_point\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getWins(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_win\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_win\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getDraws(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_draw\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_draw\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getLosses(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_loss\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_loss\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScore(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function getScoreAway(manager) {\r\n        let res = 0\r\n        if (level === 0) {\r\n            manager.career.forEach(career => {\r\n                res += career.total_score_away\r\n            })\r\n        } else {\r\n            let career = manager.career.find(x => x.level === level)\r\n            if (career) {\r\n                res = career.total_score_away\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    function orderByChamp(data) {\r\n        return data.sort((a, b) => getChampion(b) - getChampion(a))\r\n    }\r\n\r\n    function orderByRunnerup(data) {\r\n        return data.sort((a, b) => getRunnerup(b) - getRunnerup(a))\r\n    }\r\n\r\n    function orderByPoints(data) {\r\n        return data.sort((a, b) => getPoints(b) - getPoints(a))\r\n    }\r\n\r\n    function orderByScore(data) {\r\n        return data.sort((a, b) => getScore(b) - getScore(a))\r\n    }\r\n\r\n    function orderByScoreAway(data) {\r\n        return data.sort((a, b) => getScoreAway(b) - getScoreAway(a))\r\n    }\r\n\r\n    function orderByWin(data) {\r\n        return data.sort((a, b) => getWins(b) - getWins(a))\r\n    }\r\n\r\n    function orderByDraw(data) {\r\n        return data.sort((a, b) => getDraws(b) - getDraws(a))\r\n    }\r\n\r\n    function orderByLoss(data) {\r\n        return data.sort((a, b) => getLosses(b) - getLosses(a))\r\n    }\r\n\r\n    function sortManagers(type) {                   \r\n        switch(type) {\r\n            case \"champ\":                \r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n            case \"runnerup\":                \r\n                setManagers(orderByRunnerup(managers))    \r\n                break;            \r\n            case \"points\": \r\n                setManagers(orderByPoints(managers))\r\n                break;\r\n            case \"score\": \r\n                setManagers(orderByScore(managers))\r\n                break;\r\n            case \"scoreaway\": \r\n                setManagers(orderByScoreAway(managers))\r\n                break;\r\n            case \"win\": \r\n                setManagers(orderByWin(managers))\r\n                break;\r\n            case \"draw\": \r\n                setManagers(orderByDraw(managers))\r\n                break;\r\n            case \"loss\": \r\n                setManagers(orderByLoss(managers))\r\n                break;\r\n            default:\r\n                setManagers(orderByChamp(managers))\r\n                break;\r\n        }  \r\n    }\r\n\r\n    function handleSort(value) {              \r\n        setSortType(value)          \r\n        sortManagers(value)               \r\n    }      \r\n\r\n    function onChangeLevel(e) {\r\n        setLevel(e.target.value)\r\n        setSortType('champ')\r\n        sortManagers('champ')         \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { managers ? (                        \r\n            <div>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                        <a href=\"/\">Нүүр</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        Менежер\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div style={{ margin: '16px 0', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <div>\r\n                        <strong>Эрэмбэлэх: </strong>\r\n                        <Select defaultValue={sortType} style={{ width: 200 }} onChange={handleSort}>\r\n                            <Select.Option value=\"none\">---------</Select.Option>\r\n                            <Select.Option value=\"champ\">Түрүү</Select.Option>\r\n                            <Select.Option value=\"runnerup\">Үзүүр</Select.Option>\r\n                            <Select.Option value=\"points\">Оноо</Select.Option>\r\n                            <Select.Option value=\"score\">Авсан оноо</Select.Option>\r\n                            <Select.Option value=\"scoreaway\">Алдсан оноо</Select.Option>\r\n                            <Select.Option value=\"win\">Хожил</Select.Option>\r\n                            <Select.Option value=\"draw\">Тэнцээ</Select.Option>\r\n                            <Select.Option value=\"loss\">Хожигдол</Select.Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Radio.Group onChange={onChangeLevel} defaultValue={0}>\r\n                            <Radio.Button value={1}>Дээд</Radio.Button>\r\n                            <Radio.Button value={2}>Чэмпионшип</Radio.Button>\r\n                            <Radio.Button value={0}>Нийт</Radio.Button>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </div>\r\n                <div style={{ margin: '16px 0' }}>\r\n                    <List\r\n                        grid={{\r\n                            gutter: 16,\r\n                            xs: 2,\r\n                            sm: 3,\r\n                            md: 4,\r\n                            lg: 5,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }}\r\n                        dataSource={managers}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <a href={`/managers/${item.id}`}>\r\n                                <Card \r\n                                    hoverable             \r\n                                    size=\"small\"                                                            \r\n                                    title={\r\n                                        <div>\r\n                                            <Avatar shape=\"square\" size={24} style={{ marginRight: '4px' }} src={<img src={item.image} alt=\"teamlogo\" style={{ height: '100%', width: 'auto' }} />} />\r\n                                            {item.name}\r\n                                        </div>\r\n                                    }\r\n                                    extra={\r\n                                        <div style={{ display: 'flex' }}>\r\n                                            <div style={{ marginRight: '8px' }}>\r\n                                                <Badge count={getChampion(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyFilled style={{ color: 'yellow' }} />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <div>\r\n                                                <Badge count={getRunnerup(item)}>\r\n                                                    <Avatar shape=\"square\" icon={<TrophyOutlined />} />\r\n                                                </Badge>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                >\r\n                                    <p>Оноо: {getPoints(item)}</p>                                    \r\n                                    <p>Хожил: {getWins(item)}</p>\r\n                                    <p>Тэнцээ: {getDraws(item)}</p>\r\n                                    <p>Хожигдол: {getLosses(item)}</p>\r\n                                    <p>Авсан: {getScore(item)}</p>\r\n                                    <p>Алдсан: {getScoreAway(item)}</p>\r\n                                </Card>\r\n                                </a>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </div>\r\n            ) : (\r\n                <div style={{ width: '100%', height: '60vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Spin />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerList;","D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\stats\\StatsList.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\DuelCompare.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\ImageUpload.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\LeagueTable.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\DuelInfo.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\GameWeek.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\components\\CareerTable.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\stats\\StatsTable.js",[],"D:\\dev\\djangoreact\\FantasyDB\\frontend\\src\\duel\\Duel.js",[],{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"317","replacedBy":"321"},{"ruleId":"319","replacedBy":"322"},{"ruleId":"317","replacedBy":"323"},{"ruleId":"319","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":34,"column":8,"nodeType":"327","endLine":34,"endColumn":21,"suggestions":"328"},{"ruleId":"325","severity":1,"message":"329","line":23,"column":8,"nodeType":"327","endLine":23,"endColumn":10,"suggestions":"330"},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],["331"],["332"],["331"],["332"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'manager'. Either include it or remove the dependency array.","ArrayExpression",["333"],"React Hook useEffect has a missing dependency: 'orderByChamp'. Either include it or remove the dependency array.",["334"],"no-global-assign","no-unsafe-negation",{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [manager, props.match]",{"range":"339","text":"340"},"Update the dependencies array to be: [orderByChamp]",{"range":"341","text":"342"},[1278,1291],"[manager, props.match]",[831,833],"[orderByChamp]"]